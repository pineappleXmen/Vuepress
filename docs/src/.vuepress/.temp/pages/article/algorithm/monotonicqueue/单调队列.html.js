export const data = JSON.parse("{\"key\":\"v-704dfdd7\",\"path\":\"/article/algorithm/monotonicqueue/%E5%8D%95%E8%B0%83%E9%98%9F%E5%88%97.html\",\"title\":\"单调队列 Monotone Queue\",\"lang\":\"zh-CN\",\"frontmatter\":{\"description\":\"单调队列 Monotone Queue 需要不断维护队列的单调性，时刻保证队列元素从大到小或从小到大 前置知识：双指针 以固定窗口大小的区间最大值为例（此时维护的是一个从大到小的单调队列）： 每次向右移动一格左指针，在移动前，如果左指针指向的元素在队首左侧，说明左指针指向的元素小于队首，移动左指针不会改变区间最大值，直接移动左指针即可； 如果左指针指向的就是队首，那么移动左指针会使区间最大值变小（变为单调队列队首之后的那个元素），我们要弹出队首。 这样无论是何种情况，都保证了在移动左指针后，单调队列的队首始终为当前区间的最大值。 https://oi-wiki.org/ds/monotonous-queue/ https://oi-wiki.org/dp/opt/monotonous-queue-stack/ https://cp-algorithms.com/data_structures/stack_queue_modification.html https://blog.csdn.net/weixin_43914593/article/details/105791217 算法竞赛专题解析（13）：DP优化(3)--单调队列优化 todo https://xyzl.blog.luogu.org/DQ-OP-DP https://leetcode.cn/tag/monotonic-queue/problemset/ todo https://www.luogu.com.cn/problem/P2627 todo http://judge.u-aizu.ac.jp/onlinejudge/description.jsp?id=1070 LC375 猜数字大小 II https://leetcode-cn.com/problems/guess-number-higher-or-lower-ii/ ​ https://leetcode.cn/problems/guess-number-higher-or-lower-ii/solution/cong-ji-yi-hua-sou-suo-on3-dao-dong-tai-q13g9/\",\"head\":[[\"meta\",{\"property\":\"og:url\",\"content\":\"https://vuepress-theme-hope-docs-demo.netlify.app/article/algorithm/monotonicqueue/%E5%8D%95%E8%B0%83%E9%98%9F%E5%88%97.html\"}],[\"meta\",{\"property\":\"og:site_name\",\"content\":\"Pineapple Coding\"}],[\"meta\",{\"property\":\"og:title\",\"content\":\"单调队列 Monotone Queue\"}],[\"meta\",{\"property\":\"og:description\",\"content\":\"单调队列 Monotone Queue 需要不断维护队列的单调性，时刻保证队列元素从大到小或从小到大 前置知识：双指针 以固定窗口大小的区间最大值为例（此时维护的是一个从大到小的单调队列）： 每次向右移动一格左指针，在移动前，如果左指针指向的元素在队首左侧，说明左指针指向的元素小于队首，移动左指针不会改变区间最大值，直接移动左指针即可； 如果左指针指向的就是队首，那么移动左指针会使区间最大值变小（变为单调队列队首之后的那个元素），我们要弹出队首。 这样无论是何种情况，都保证了在移动左指针后，单调队列的队首始终为当前区间的最大值。 https://oi-wiki.org/ds/monotonous-queue/ https://oi-wiki.org/dp/opt/monotonous-queue-stack/ https://cp-algorithms.com/data_structures/stack_queue_modification.html https://blog.csdn.net/weixin_43914593/article/details/105791217 算法竞赛专题解析（13）：DP优化(3)--单调队列优化 todo https://xyzl.blog.luogu.org/DQ-OP-DP https://leetcode.cn/tag/monotonic-queue/problemset/ todo https://www.luogu.com.cn/problem/P2627 todo http://judge.u-aizu.ac.jp/onlinejudge/description.jsp?id=1070 LC375 猜数字大小 II https://leetcode-cn.com/problems/guess-number-higher-or-lower-ii/ ​ https://leetcode.cn/problems/guess-number-higher-or-lower-ii/solution/cong-ji-yi-hua-sou-suo-on3-dao-dong-tai-q13g9/\"}],[\"meta\",{\"property\":\"og:type\",\"content\":\"article\"}],[\"meta\",{\"property\":\"og:locale\",\"content\":\"zh-CN\"}]]},\"headers\":[],\"readingTime\":{\"minutes\":1.12,\"words\":336},\"filePathRelative\":\"article/algorithm/monotonicqueue/单调队列.md\",\"excerpt\":\"<h1> 单调队列 Monotone Queue</h1>\\n<p>需要不断维护队列的单调性，时刻保证队列元素从大到小或从小到大\\n前置知识：双指针\\n以固定窗口大小的区间最大值为例（此时维护的是一个从大到小的单调队列）：\\n每次向右移动一格左指针，在移动前，如果左指针指向的元素在队首左侧，说明左指针指向的元素小于队首，移动左指针不会改变区间最大值，直接移动左指针即可；\\n如果左指针指向的就是队首，那么移动左指针会使区间最大值变小（变为单调队列队首之后的那个元素），我们要弹出队首。\\n这样无论是何种情况，都保证了在移动左指针后，单调队列的队首始终为当前区间的最大值。</p>\\n<ul>\\n<li><a href=\\\"https://oi-wiki.org/ds/monotonous-queue/\\\" target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\">https://oi-wiki.org/ds/monotonous-queue/</a></li>\\n<li><a href=\\\"https://oi-wiki.org/dp/opt/monotonous-queue-stack/\\\" target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\">https://oi-wiki.org/dp/opt/monotonous-queue-stack/</a></li>\\n<li><a href=\\\"https://cp-algorithms.com/data_structures/stack_queue_modification.html\\\" target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\">https://cp-algorithms.com/data_structures/stack_queue_modification.html</a></li>\\n<li><a href=\\\"https://blog.csdn.net/weixin_43914593/article/details/105791217\\\" target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\">https://blog.csdn.net/weixin_43914593/article/details/105791217</a> 算法竞赛专题解析（13）：DP优化(3)--单调队列优化</li>\\n<li>todo <a href=\\\"https://xyzl.blog.luogu.org/DQ-OP-DP\\\" target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\">https://xyzl.blog.luogu.org/DQ-OP-DP</a></li>\\n<li><a href=\\\"https://leetcode.cn/tag/monotonic-queue/problemset/\\\" target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\">https://leetcode.cn/tag/monotonic-queue/problemset/</a></li>\\n<li>todo <a href=\\\"https://www.luogu.com.cn/problem/P2627\\\" target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\">https://www.luogu.com.cn/problem/P2627</a></li>\\n<li>todo <a href=\\\"http://judge.u-aizu.ac.jp/onlinejudge/description.jsp?id=1070\\\" target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\">http://judge.u-aizu.ac.jp/onlinejudge/description.jsp?id=1070</a></li>\\n<li>LC375 猜数字大小 II <a href=\\\"https://leetcode-cn.com/problems/guess-number-higher-or-lower-ii/\\\" target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\">https://leetcode-cn.com/problems/guess-number-higher-or-lower-ii/</a></li>\\n<li>​      <a href=\\\"https://leetcode.cn/problems/guess-number-higher-or-lower-ii/solution/cong-ji-yi-hua-sou-suo-on3-dao-dong-tai-q13g9/\\\" target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\">https://leetcode.cn/problems/guess-number-higher-or-lower-ii/solution/cong-ji-yi-hua-sou-suo-on3-dao-dong-tai-q13g9/</a></li>\\n</ul>\",\"autoDesc\":true}")

if (import.meta.webpackHot) {
  import.meta.webpackHot.accept()
  if (__VUE_HMR_RUNTIME__.updatePageData) {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  }
}

if (import.meta.hot) {
  import.meta.hot.accept(({ data }) => {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  })
}
