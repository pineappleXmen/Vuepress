export const data = JSON.parse("{\"key\":\"v-33e59c22\",\"path\":\"/article/algorithm/unionfind/%E5%B9%B6%E6%9F%A5%E9%9B%86.html\",\"title\":\"并查集基本模板\",\"lang\":\"zh-CN\",\"frontmatter\":{\"description\":\"并查集基本模板 public class UnionFindModel { public class DSU{ int[] parent; public DSU(int n){ parent = new int[n+1]; for(int i=0;i&lt;=n;i++) parent[i]=i; } public int find(int x){ if(parent[x]!=x) parent[x]=find(parent[x]); return parent[x]; } public void union(int x,int y){ parent[find(x)]=find(y); } } public class DSUWithMaxSize { int[] parent; int[] size; public DSUWithMaxSize(int n){ parent = new int[n+1]; size = new int[n+1]; for(int i=0;i&lt;=n;i++) parent[i]=i; Arrays.fill(size,1); } public int find(int x){ if(parent[x]!=x) parent[x]=find(parent[x]); return parent[x]; } public void union(int x,int y){ int RootX = find(x),RootY = find(y); if(RootX==RootY) return; if(size[RootX]&lt;=size[RootY]) { parent[RootX]=RootY; size[RootY]+=size[RootX]; }else{ parent[RootY]=RootX; size[RootX]+=size[RootY]; } } public int findMax(){ int max = 0; for(int s:size) max = Math.max(max,s); return max; } } public class DSUwithRank { //rank表示树的高度或深度 深度低 int[] parent; int[] rank; public DSUwithRank(int n){ parent = new int[n+1]; rank = new int[n+1]; for(int i=0;i&lt;=n;i++) parent[i]=i; Arrays.fill(rank,1); } public int find(int x){ if(parent[x]!=x) parent[x]=find(parent[x]); return parent[x]; } public void union(int x,int y){ int RootX = find(x),RootY = find(y); if(RootX==RootY) return; if(rank[RootX]&lt; rank[RootY]) { parent[RootX]=RootY; }else if(rank[RootX]&gt;rank[RootY]){ parent[RootY]=RootX; }else { //只有在深度一样的时候才需要维护 parent[RootX]=RootY; rank[RootY]++; } } public int findMax(){ int max = 0; for(int s: rank) max = Math.max(max,s); return max; } } }\",\"head\":[[\"meta\",{\"property\":\"og:url\",\"content\":\"https://vuepress-theme-hope-docs-demo.netlify.app/article/algorithm/unionfind/%E5%B9%B6%E6%9F%A5%E9%9B%86.html\"}],[\"meta\",{\"property\":\"og:site_name\",\"content\":\"Pineapple Coding\"}],[\"meta\",{\"property\":\"og:title\",\"content\":\"并查集基本模板\"}],[\"meta\",{\"property\":\"og:description\",\"content\":\"并查集基本模板 public class UnionFindModel { public class DSU{ int[] parent; public DSU(int n){ parent = new int[n+1]; for(int i=0;i&lt;=n;i++) parent[i]=i; } public int find(int x){ if(parent[x]!=x) parent[x]=find(parent[x]); return parent[x]; } public void union(int x,int y){ parent[find(x)]=find(y); } } public class DSUWithMaxSize { int[] parent; int[] size; public DSUWithMaxSize(int n){ parent = new int[n+1]; size = new int[n+1]; for(int i=0;i&lt;=n;i++) parent[i]=i; Arrays.fill(size,1); } public int find(int x){ if(parent[x]!=x) parent[x]=find(parent[x]); return parent[x]; } public void union(int x,int y){ int RootX = find(x),RootY = find(y); if(RootX==RootY) return; if(size[RootX]&lt;=size[RootY]) { parent[RootX]=RootY; size[RootY]+=size[RootX]; }else{ parent[RootY]=RootX; size[RootX]+=size[RootY]; } } public int findMax(){ int max = 0; for(int s:size) max = Math.max(max,s); return max; } } public class DSUwithRank { //rank表示树的高度或深度 深度低 int[] parent; int[] rank; public DSUwithRank(int n){ parent = new int[n+1]; rank = new int[n+1]; for(int i=0;i&lt;=n;i++) parent[i]=i; Arrays.fill(rank,1); } public int find(int x){ if(parent[x]!=x) parent[x]=find(parent[x]); return parent[x]; } public void union(int x,int y){ int RootX = find(x),RootY = find(y); if(RootX==RootY) return; if(rank[RootX]&lt; rank[RootY]) { parent[RootX]=RootY; }else if(rank[RootX]&gt;rank[RootY]){ parent[RootY]=RootX; }else { //只有在深度一样的时候才需要维护 parent[RootX]=RootY; rank[RootY]++; } } public int findMax(){ int max = 0; for(int s: rank) max = Math.max(max,s); return max; } } }\"}],[\"meta\",{\"property\":\"og:type\",\"content\":\"article\"}],[\"meta\",{\"property\":\"og:locale\",\"content\":\"zh-CN\"}]]},\"headers\":[],\"readingTime\":{\"minutes\":0.99,\"words\":298},\"filePathRelative\":\"article/algorithm/unionfind/并查集.md\",\"excerpt\":\"<h1> 并查集基本模板</h1>\\n<div class=\\\"language-java line-numbers-mode\\\" data-ext=\\\"java\\\"><pre class=\\\"language-java\\\"><code><span class=\\\"token keyword\\\">public</span> <span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">UnionFindModel</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">public</span> <span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">DSU</span><span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token keyword\\\">int</span><span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span> parent<span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token keyword\\\">public</span> <span class=\\\"token function\\\">DSU</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">int</span> n<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">{</span>\\n            parent <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token keyword\\\">int</span><span class=\\\"token punctuation\\\">[</span>n<span class=\\\"token operator\\\">+</span><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n            <span class=\\\"token keyword\\\">for</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">int</span> i<span class=\\\"token operator\\\">=</span><span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">;</span>i<span class=\\\"token operator\\\">&lt;=</span>n<span class=\\\"token punctuation\\\">;</span>i<span class=\\\"token operator\\\">++</span><span class=\\\"token punctuation\\\">)</span> parent<span class=\\\"token punctuation\\\">[</span>i<span class=\\\"token punctuation\\\">]</span><span class=\\\"token operator\\\">=</span>i<span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token punctuation\\\">}</span>\\n        <span class=\\\"token keyword\\\">public</span> <span class=\\\"token keyword\\\">int</span> <span class=\\\"token function\\\">find</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">int</span> x<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">{</span>\\n            <span class=\\\"token keyword\\\">if</span><span class=\\\"token punctuation\\\">(</span>parent<span class=\\\"token punctuation\\\">[</span>x<span class=\\\"token punctuation\\\">]</span><span class=\\\"token operator\\\">!=</span>x<span class=\\\"token punctuation\\\">)</span> parent<span class=\\\"token punctuation\\\">[</span>x<span class=\\\"token punctuation\\\">]</span><span class=\\\"token operator\\\">=</span><span class=\\\"token function\\\">find</span><span class=\\\"token punctuation\\\">(</span>parent<span class=\\\"token punctuation\\\">[</span>x<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n            <span class=\\\"token keyword\\\">return</span> parent<span class=\\\"token punctuation\\\">[</span>x<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token punctuation\\\">}</span>\\n        <span class=\\\"token keyword\\\">public</span> <span class=\\\"token keyword\\\">void</span> <span class=\\\"token function\\\">union</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">int</span> x<span class=\\\"token punctuation\\\">,</span><span class=\\\"token keyword\\\">int</span> y<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">{</span>\\n           parent<span class=\\\"token punctuation\\\">[</span><span class=\\\"token function\\\">find</span><span class=\\\"token punctuation\\\">(</span>x<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token operator\\\">=</span><span class=\\\"token function\\\">find</span><span class=\\\"token punctuation\\\">(</span>y<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token punctuation\\\">}</span>\\n\\n    <span class=\\\"token punctuation\\\">}</span>\\n\\n    <span class=\\\"token keyword\\\">public</span> <span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">DSUWithMaxSize</span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token keyword\\\">int</span><span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span> parent<span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token keyword\\\">int</span><span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span> size<span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token keyword\\\">public</span> <span class=\\\"token class-name\\\">DSUWithMaxSize</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">int</span> n<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">{</span>\\n            parent <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token keyword\\\">int</span><span class=\\\"token punctuation\\\">[</span>n<span class=\\\"token operator\\\">+</span><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n            size <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token keyword\\\">int</span><span class=\\\"token punctuation\\\">[</span>n<span class=\\\"token operator\\\">+</span><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n            <span class=\\\"token keyword\\\">for</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">int</span> i<span class=\\\"token operator\\\">=</span><span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">;</span>i<span class=\\\"token operator\\\">&lt;=</span>n<span class=\\\"token punctuation\\\">;</span>i<span class=\\\"token operator\\\">++</span><span class=\\\"token punctuation\\\">)</span> parent<span class=\\\"token punctuation\\\">[</span>i<span class=\\\"token punctuation\\\">]</span><span class=\\\"token operator\\\">=</span>i<span class=\\\"token punctuation\\\">;</span>\\n            <span class=\\\"token class-name\\\">Arrays</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">fill</span><span class=\\\"token punctuation\\\">(</span>size<span class=\\\"token punctuation\\\">,</span><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token punctuation\\\">}</span>\\n        <span class=\\\"token keyword\\\">public</span> <span class=\\\"token keyword\\\">int</span> <span class=\\\"token function\\\">find</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">int</span> x<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">{</span>\\n            <span class=\\\"token keyword\\\">if</span><span class=\\\"token punctuation\\\">(</span>parent<span class=\\\"token punctuation\\\">[</span>x<span class=\\\"token punctuation\\\">]</span><span class=\\\"token operator\\\">!=</span>x<span class=\\\"token punctuation\\\">)</span> parent<span class=\\\"token punctuation\\\">[</span>x<span class=\\\"token punctuation\\\">]</span><span class=\\\"token operator\\\">=</span><span class=\\\"token function\\\">find</span><span class=\\\"token punctuation\\\">(</span>parent<span class=\\\"token punctuation\\\">[</span>x<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n            <span class=\\\"token keyword\\\">return</span> parent<span class=\\\"token punctuation\\\">[</span>x<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token punctuation\\\">}</span>\\n        <span class=\\\"token keyword\\\">public</span> <span class=\\\"token keyword\\\">void</span> <span class=\\\"token function\\\">union</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">int</span> x<span class=\\\"token punctuation\\\">,</span><span class=\\\"token keyword\\\">int</span> y<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">{</span>\\n            <span class=\\\"token keyword\\\">int</span> <span class=\\\"token class-name\\\">RootX</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">find</span><span class=\\\"token punctuation\\\">(</span>x<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span><span class=\\\"token class-name\\\">RootY</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">find</span><span class=\\\"token punctuation\\\">(</span>y<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n            <span class=\\\"token keyword\\\">if</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token class-name\\\">RootX</span><span class=\\\"token operator\\\">==</span><span class=\\\"token class-name\\\">RootY</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token keyword\\\">return</span><span class=\\\"token punctuation\\\">;</span>\\n            <span class=\\\"token keyword\\\">if</span><span class=\\\"token punctuation\\\">(</span>size<span class=\\\"token punctuation\\\">[</span><span class=\\\"token class-name\\\">RootX</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token operator\\\">&lt;=</span>size<span class=\\\"token punctuation\\\">[</span><span class=\\\"token class-name\\\">RootY</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n                parent<span class=\\\"token punctuation\\\">[</span><span class=\\\"token class-name\\\">RootX</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token operator\\\">=</span><span class=\\\"token class-name\\\">RootY</span><span class=\\\"token punctuation\\\">;</span>\\n                size<span class=\\\"token punctuation\\\">[</span><span class=\\\"token class-name\\\">RootY</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token operator\\\">+=</span>size<span class=\\\"token punctuation\\\">[</span><span class=\\\"token class-name\\\">RootX</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n            <span class=\\\"token punctuation\\\">}</span><span class=\\\"token keyword\\\">else</span><span class=\\\"token punctuation\\\">{</span>\\n                parent<span class=\\\"token punctuation\\\">[</span><span class=\\\"token class-name\\\">RootY</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token operator\\\">=</span><span class=\\\"token class-name\\\">RootX</span><span class=\\\"token punctuation\\\">;</span>\\n                size<span class=\\\"token punctuation\\\">[</span><span class=\\\"token class-name\\\">RootX</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token operator\\\">+=</span>size<span class=\\\"token punctuation\\\">[</span><span class=\\\"token class-name\\\">RootY</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n            <span class=\\\"token punctuation\\\">}</span>\\n        <span class=\\\"token punctuation\\\">}</span>\\n        <span class=\\\"token keyword\\\">public</span>  <span class=\\\"token keyword\\\">int</span> <span class=\\\"token function\\\">findMax</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">{</span>\\n            <span class=\\\"token keyword\\\">int</span> max <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">;</span>\\n            <span class=\\\"token keyword\\\">for</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">int</span> s<span class=\\\"token operator\\\">:</span>size<span class=\\\"token punctuation\\\">)</span> max <span class=\\\"token operator\\\">=</span> <span class=\\\"token class-name\\\">Math</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">max</span><span class=\\\"token punctuation\\\">(</span>max<span class=\\\"token punctuation\\\">,</span>s<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n            <span class=\\\"token keyword\\\">return</span> max<span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token keyword\\\">public</span> <span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">DSUwithRank</span> <span class=\\\"token punctuation\\\">{</span>   <span class=\\\"token comment\\\">//rank表示树的高度或深度 深度低</span>\\n        <span class=\\\"token keyword\\\">int</span><span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span> parent<span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token keyword\\\">int</span><span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span> rank<span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token keyword\\\">public</span> <span class=\\\"token class-name\\\">DSUwithRank</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">int</span> n<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">{</span>\\n            parent <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token keyword\\\">int</span><span class=\\\"token punctuation\\\">[</span>n<span class=\\\"token operator\\\">+</span><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n            rank <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token keyword\\\">int</span><span class=\\\"token punctuation\\\">[</span>n<span class=\\\"token operator\\\">+</span><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n            <span class=\\\"token keyword\\\">for</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">int</span> i<span class=\\\"token operator\\\">=</span><span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">;</span>i<span class=\\\"token operator\\\">&lt;=</span>n<span class=\\\"token punctuation\\\">;</span>i<span class=\\\"token operator\\\">++</span><span class=\\\"token punctuation\\\">)</span> parent<span class=\\\"token punctuation\\\">[</span>i<span class=\\\"token punctuation\\\">]</span><span class=\\\"token operator\\\">=</span>i<span class=\\\"token punctuation\\\">;</span>\\n            <span class=\\\"token class-name\\\">Arrays</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">fill</span><span class=\\\"token punctuation\\\">(</span>rank<span class=\\\"token punctuation\\\">,</span><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token punctuation\\\">}</span>\\n        <span class=\\\"token keyword\\\">public</span> <span class=\\\"token keyword\\\">int</span> <span class=\\\"token function\\\">find</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">int</span> x<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">{</span>\\n            <span class=\\\"token keyword\\\">if</span><span class=\\\"token punctuation\\\">(</span>parent<span class=\\\"token punctuation\\\">[</span>x<span class=\\\"token punctuation\\\">]</span><span class=\\\"token operator\\\">!=</span>x<span class=\\\"token punctuation\\\">)</span> parent<span class=\\\"token punctuation\\\">[</span>x<span class=\\\"token punctuation\\\">]</span><span class=\\\"token operator\\\">=</span><span class=\\\"token function\\\">find</span><span class=\\\"token punctuation\\\">(</span>parent<span class=\\\"token punctuation\\\">[</span>x<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n            <span class=\\\"token keyword\\\">return</span> parent<span class=\\\"token punctuation\\\">[</span>x<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token punctuation\\\">}</span>\\n        <span class=\\\"token keyword\\\">public</span> <span class=\\\"token keyword\\\">void</span> <span class=\\\"token function\\\">union</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">int</span> x<span class=\\\"token punctuation\\\">,</span><span class=\\\"token keyword\\\">int</span> y<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">{</span>\\n            <span class=\\\"token keyword\\\">int</span> <span class=\\\"token class-name\\\">RootX</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">find</span><span class=\\\"token punctuation\\\">(</span>x<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span><span class=\\\"token class-name\\\">RootY</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">find</span><span class=\\\"token punctuation\\\">(</span>y<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n            <span class=\\\"token keyword\\\">if</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token class-name\\\">RootX</span><span class=\\\"token operator\\\">==</span><span class=\\\"token class-name\\\">RootY</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token keyword\\\">return</span><span class=\\\"token punctuation\\\">;</span>\\n            <span class=\\\"token keyword\\\">if</span><span class=\\\"token punctuation\\\">(</span>rank<span class=\\\"token punctuation\\\">[</span><span class=\\\"token class-name\\\">RootX</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token operator\\\">&lt;</span> rank<span class=\\\"token punctuation\\\">[</span><span class=\\\"token class-name\\\">RootY</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n                parent<span class=\\\"token punctuation\\\">[</span><span class=\\\"token class-name\\\">RootX</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token operator\\\">=</span><span class=\\\"token class-name\\\">RootY</span><span class=\\\"token punctuation\\\">;</span>\\n            <span class=\\\"token punctuation\\\">}</span><span class=\\\"token keyword\\\">else</span> <span class=\\\"token keyword\\\">if</span><span class=\\\"token punctuation\\\">(</span>rank<span class=\\\"token punctuation\\\">[</span><span class=\\\"token class-name\\\">RootX</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token operator\\\">&gt;</span>rank<span class=\\\"token punctuation\\\">[</span><span class=\\\"token class-name\\\">RootY</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">{</span>\\n                parent<span class=\\\"token punctuation\\\">[</span><span class=\\\"token class-name\\\">RootY</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token operator\\\">=</span><span class=\\\"token class-name\\\">RootX</span><span class=\\\"token punctuation\\\">;</span>\\n            <span class=\\\"token punctuation\\\">}</span><span class=\\\"token keyword\\\">else</span> <span class=\\\"token punctuation\\\">{</span>                                 <span class=\\\"token comment\\\">//只有在深度一样的时候才需要维护</span>\\n                parent<span class=\\\"token punctuation\\\">[</span><span class=\\\"token class-name\\\">RootX</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token operator\\\">=</span><span class=\\\"token class-name\\\">RootY</span><span class=\\\"token punctuation\\\">;</span>\\n                rank<span class=\\\"token punctuation\\\">[</span><span class=\\\"token class-name\\\">RootY</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token operator\\\">++</span><span class=\\\"token punctuation\\\">;</span>\\n            <span class=\\\"token punctuation\\\">}</span>\\n        <span class=\\\"token punctuation\\\">}</span>\\n        <span class=\\\"token keyword\\\">public</span>  <span class=\\\"token keyword\\\">int</span> <span class=\\\"token function\\\">findMax</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">{</span>\\n            <span class=\\\"token keyword\\\">int</span> max <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">;</span>\\n            <span class=\\\"token keyword\\\">for</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">int</span> s<span class=\\\"token operator\\\">:</span> rank<span class=\\\"token punctuation\\\">)</span> max <span class=\\\"token operator\\\">=</span> <span class=\\\"token class-name\\\">Math</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">max</span><span class=\\\"token punctuation\\\">(</span>max<span class=\\\"token punctuation\\\">,</span>s<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n            <span class=\\\"token keyword\\\">return</span> max<span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre><div class=\\\"line-numbers\\\" aria-hidden=\\\"true\\\"><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div></div></div>\",\"autoDesc\":true}")

if (import.meta.webpackHot) {
  import.meta.webpackHot.accept()
  if (__VUE_HMR_RUNTIME__.updatePageData) {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  }
}

if (import.meta.hot) {
  import.meta.hot.accept(({ data }) => {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  })
}
