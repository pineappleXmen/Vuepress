export const data = JSON.parse("{\"key\":\"v-71e8831d\",\"path\":\"/article/javastack/javaSE/inter.html\",\"title\":\"Java常见面试题\",\"lang\":\"zh-CN\",\"frontmatter\":{\"lang\":\"zh-CN\",\"title\":\"Java常见面试题\",\"description\":\"面试题\",\"category\":[\"Java\"],\"tag\":[\"JavaSE\"],\"head\":[[\"meta\",{\"property\":\"og:url\",\"content\":\"https://vuepress-theme-hope-docs-demo.netlify.app/article/javastack/javaSE/inter.html\"}],[\"meta\",{\"property\":\"og:site_name\",\"content\":\"Pineapple Coding\"}],[\"meta\",{\"property\":\"og:title\",\"content\":\"Java常见面试题\"}],[\"meta\",{\"property\":\"og:description\",\"content\":\"面试题\"}],[\"meta\",{\"property\":\"og:type\",\"content\":\"article\"}],[\"meta\",{\"property\":\"og:locale\",\"content\":\"zh-CN\"}],[\"meta\",{\"property\":\"article:tag\",\"content\":\"JavaSE\"}]]},\"headers\":[{\"level\":2,\"title\":\"1.Java语言特点\",\"slug\":\"_1-java语言特点\",\"link\":\"#_1-java语言特点\",\"children\":[]},{\"level\":2,\"title\":\"2.Java基础数据类型\",\"slug\":\"_2-java基础数据类型\",\"link\":\"#_2-java基础数据类型\",\"children\":[]},{\"level\":2,\"title\":\"3.基本类型问题\",\"slug\":\"_3-基本类型问题\",\"link\":\"#_3-基本类型问题\",\"children\":[{\"level\":3,\"title\":\"3.1有哪些基本类型\",\"slug\":\"_3-1有哪些基本类型\",\"link\":\"#_3-1有哪些基本类型\",\"children\":[]},{\"level\":3,\"title\":\"3.2自动装箱与拆箱了解吗？原理是什么？\",\"slug\":\"_3-2自动装箱与拆箱了解吗-原理是什么\",\"link\":\"#_3-2自动装箱与拆箱了解吗-原理是什么\",\"children\":[]},{\"level\":3,\"title\":\"3.3为什么浮点数运算的时候会有精度丢失的风险？\",\"slug\":\"_3-3为什么浮点数运算的时候会有精度丢失的风险\",\"link\":\"#_3-3为什么浮点数运算的时候会有精度丢失的风险\",\"children\":[]},{\"level\":3,\"title\":\"3.4如何解决浮点数运算的精度丢失问题？\",\"slug\":\"_3-4如何解决浮点数运算的精度丢失问题\",\"link\":\"#_3-4如何解决浮点数运算的精度丢失问题\",\"children\":[]}]},{\"level\":2,\"title\":\"4.面向对象\",\"slug\":\"_4-面向对象\",\"link\":\"#_4-面向对象\",\"children\":[{\"level\":3,\"title\":\"4.1面向对象三大特征\",\"slug\":\"_4-1面向对象三大特征\",\"link\":\"#_4-1面向对象三大特征\",\"children\":[]},{\"level\":3,\"title\":\"4.2 接口和抽象类区别\",\"slug\":\"_4-2-接口和抽象类区别\",\"link\":\"#_4-2-接口和抽象类区别\",\"children\":[]},{\"level\":3,\"title\":\"4.3 深拷贝和浅拷贝\",\"slug\":\"_4-3-深拷贝和浅拷贝\",\"link\":\"#_4-3-深拷贝和浅拷贝\",\"children\":[]}]},{\"level\":2,\"title\":\"5.Object类\",\"slug\":\"_5-object类\",\"link\":\"#_5-object类\",\"children\":[{\"level\":3,\"title\":\"5.1 == 和 equals() 的区别\",\"slug\":\"_5-1-和-equals-的区别\",\"link\":\"#_5-1-和-equals-的区别\",\"children\":[]}]},{\"level\":2,\"title\":\"5.3为什么重写 equals() 时必须重写 hashCode() 方法？\",\"slug\":\"_5-3为什么重写-equals-时必须重写-hashcode-方法\",\"link\":\"#_5-3为什么重写-equals-时必须重写-hashcode-方法\",\"children\":[]},{\"level\":2,\"title\":\"6.String类\",\"slug\":\"_6-string类\",\"link\":\"#_6-string类\",\"children\":[{\"level\":3,\"title\":\"6.1 为什么String类不可变\",\"slug\":\"_6-1-为什么string类不可变\",\"link\":\"#_6-1-为什么string类不可变\",\"children\":[]}]},{\"level\":2,\"title\":\"6.2 intern 方法有什么作用?\",\"slug\":\"_6-2-intern-方法有什么作用\",\"link\":\"#_6-2-intern-方法有什么作用\",\"children\":[]},{\"level\":2,\"title\":\"7.异常\",\"slug\":\"_7-异常\",\"link\":\"#_7-异常\",\"children\":[{\"level\":3,\"title\":\"7.1Exception 和 Error 有什么区别？\",\"slug\":\"_7-1exception-和-error-有什么区别\",\"link\":\"#_7-1exception-和-error-有什么区别\",\"children\":[]}]},{\"level\":2,\"title\":\"7.2Checked Exception 和 Unchecked Exception 有什么区别？\",\"slug\":\"_7-2checked-exception-和-unchecked-exception-有什么区别\",\"link\":\"#_7-2checked-exception-和-unchecked-exception-有什么区别\",\"children\":[]},{\"level\":2,\"title\":\"7.3 Try-catch-finally\",\"slug\":\"_7-3-try-catch-finally\",\"link\":\"#_7-3-try-catch-finally\",\"children\":[]},{\"level\":2,\"title\":\"7.4 finally 中的代码一定会执行吗？\",\"slug\":\"_7-4-finally-中的代码一定会执行吗\",\"link\":\"#_7-4-finally-中的代码一定会执行吗\",\"children\":[]},{\"level\":2,\"title\":\"8.反射\",\"slug\":\"_8-反射\",\"link\":\"#_8-反射\",\"children\":[{\"level\":3,\"title\":\"8.1反射概述\",\"slug\":\"_8-1反射概述\",\"link\":\"#_8-1反射概述\",\"children\":[]},{\"level\":3,\"title\":\"8.2反射原理\",\"slug\":\"_8-2反射原理\",\"link\":\"#_8-2反射原理\",\"children\":[]}]},{\"level\":2,\"title\":\"9.代理\",\"slug\":\"_9-代理\",\"link\":\"#_9-代理\",\"children\":[{\"level\":3,\"title\":\"9.1 Java Proxy代理原理\",\"slug\":\"_9-1-java-proxy代理原理\",\"link\":\"#_9-1-java-proxy代理原理\",\"children\":[]}]}],\"readingTime\":{\"minutes\":16.71,\"words\":5014},\"filePathRelative\":\"article/javastack/javaSE/inter.md\",\"excerpt\":\"<h2> 1.Java语言特点</h2>\\n<ol>\\n<li>简单易学；</li>\\n<li>面向对象（封装，继承，多态）；</li>\\n<li>平台无关性（ Java 虚拟机实现平台无关性）；</li>\\n<li>支持多线程（ C++ 语言没有内置的多线程机制，因此必须调用操作系统的多线程功能来进行多线程程序设计，而 Java 语言却提供了多线程支持）；</li>\\n<li>可靠性；</li>\\n<li>安全性；</li>\\n<li>支持网络编程并且很方便（ Java 语言诞生本身就是为简化网络编程设计的，因此 Java 语言不仅支持网络编程而且很方便）；</li>\\n<li>编译与解释并存；</li>\\n</ol>\"}")

if (import.meta.webpackHot) {
  import.meta.webpackHot.accept()
  if (__VUE_HMR_RUNTIME__.updatePageData) {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  }
}

if (import.meta.hot) {
  import.meta.hot.accept(({ data }) => {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  })
}
