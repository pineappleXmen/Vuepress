export const data = JSON.parse("{\"key\":\"v-8cb5b3dc\",\"path\":\"/article/javastack/jvm/JVM-%E5%86%85%E5%AD%98%E7%BB%93%E6%9E%84.html\",\"title\":\"JVM-内存结构\",\"lang\":\"zh-CN\",\"frontmatter\":{\"lang\":\"zh-CN\",\"title\":\"JVM-内存结构\",\"description\":\"JVM内存结构\",\"category\":[\"Java\"],\"tag\":[\"JVM\"],\"head\":[[\"meta\",{\"property\":\"og:url\",\"content\":\"https://vuepress-theme-hope-docs-demo.netlify.app/article/javastack/jvm/JVM-%E5%86%85%E5%AD%98%E7%BB%93%E6%9E%84.html\"}],[\"meta\",{\"property\":\"og:site_name\",\"content\":\"Pineapple Coding\"}],[\"meta\",{\"property\":\"og:title\",\"content\":\"JVM-内存结构\"}],[\"meta\",{\"property\":\"og:description\",\"content\":\"JVM内存结构\"}],[\"meta\",{\"property\":\"og:type\",\"content\":\"article\"}],[\"meta\",{\"property\":\"og:locale\",\"content\":\"zh-CN\"}],[\"meta\",{\"property\":\"article:tag\",\"content\":\"JVM\"}]]},\"headers\":[{\"level\":2,\"title\":\"1.程序计数器\",\"slug\":\"_1-程序计数器\",\"link\":\"#_1-程序计数器\",\"children\":[{\"level\":3,\"title\":\"1.1 定义\",\"slug\":\"_1-1-定义\",\"link\":\"#_1-1-定义\",\"children\":[]}]},{\"level\":2,\"title\":\"特点\",\"slug\":\"特点\",\"link\":\"#特点\",\"children\":[]},{\"level\":2,\"title\":\"1.2 作用\",\"slug\":\"_1-2-作用\",\"link\":\"#_1-2-作用\",\"children\":[]},{\"level\":2,\"title\":\"2.虚拟机栈\",\"slug\":\"_2-虚拟机栈\",\"link\":\"#_2-虚拟机栈\",\"children\":[{\"level\":3,\"title\":\"2.1 定义\",\"slug\":\"_2-1-定义\",\"link\":\"#_2-1-定义\",\"children\":[]},{\"level\":3,\"title\":\"2.2 栈内存溢出\",\"slug\":\"_2-2-栈内存溢出\",\"link\":\"#_2-2-栈内存溢出\",\"children\":[]},{\"level\":3,\"title\":\"2.3 线程运行诊断\",\"slug\":\"_2-3-线程运行诊断\",\"link\":\"#_2-3-线程运行诊断\",\"children\":[]}]},{\"level\":2,\"title\":\"3.本地方法栈\",\"slug\":\"_3-本地方法栈\",\"link\":\"#_3-本地方法栈\",\"children\":[]},{\"level\":2,\"title\":\"4.堆\",\"slug\":\"_4-堆\",\"link\":\"#_4-堆\",\"children\":[{\"level\":3,\"title\":\"4.1 定义\",\"slug\":\"_4-1-定义\",\"link\":\"#_4-1-定义\",\"children\":[]},{\"level\":3,\"title\":\"4.2 堆内存溢出\",\"slug\":\"_4-2-堆内存溢出\",\"link\":\"#_4-2-堆内存溢出\",\"children\":[]},{\"level\":3,\"title\":\"4.3 堆内存诊断\",\"slug\":\"_4-3-堆内存诊断\",\"link\":\"#_4-3-堆内存诊断\",\"children\":[]}]},{\"level\":2,\"title\":\"5.方法区\",\"slug\":\"_5-方法区\",\"link\":\"#_5-方法区\",\"children\":[{\"level\":3,\"title\":\"5.1 定义\",\"slug\":\"_5-1-定义\",\"link\":\"#_5-1-定义\",\"children\":[]},{\"level\":3,\"title\":\"5.2 组成\",\"slug\":\"_5-2-组成\",\"link\":\"#_5-2-组成\",\"children\":[]},{\"level\":3,\"title\":\"5.3 方法区内存溢出\",\"slug\":\"_5-3-方法区内存溢出\",\"link\":\"#_5-3-方法区内存溢出\",\"children\":[]},{\"level\":3,\"title\":\"5.4 运行时常量池\",\"slug\":\"_5-4-运行时常量池\",\"link\":\"#_5-4-运行时常量池\",\"children\":[]},{\"level\":3,\"title\":\"5.5 StringTable\",\"slug\":\"_5-5-stringtable\",\"link\":\"#_5-5-stringtable\",\"children\":[]},{\"level\":3,\"title\":\"5.6 StringTable 位置\",\"slug\":\"_5-6-stringtable-位置\",\"link\":\"#_5-6-stringtable-位置\",\"children\":[]},{\"level\":3,\"title\":\"5.7 StringTable 垃圾回收\",\"slug\":\"_5-7-stringtable-垃圾回收\",\"link\":\"#_5-7-stringtable-垃圾回收\",\"children\":[]},{\"level\":3,\"title\":\"5.8 StringTable 性能调优\",\"slug\":\"_5-8-stringtable-性能调优\",\"link\":\"#_5-8-stringtable-性能调优\",\"children\":[]}]},{\"level\":2,\"title\":\"6.直接内存\",\"slug\":\"_6-直接内存\",\"link\":\"#_6-直接内存\",\"children\":[{\"level\":3,\"title\":\"6.1 定义\",\"slug\":\"_6-1-定义\",\"link\":\"#_6-1-定义\",\"children\":[]},{\"level\":3,\"title\":\"6.2 分配和回收原理\",\"slug\":\"_6-2-分配和回收原理\",\"link\":\"#_6-2-分配和回收原理\",\"children\":[]}]}],\"readingTime\":{\"minutes\":4.19,\"words\":1258},\"filePathRelative\":\"article/javastack/jvm/JVM-内存结构.md\",\"excerpt\":\"<blockquote>\\n<p>内存结构</p>\\n<ol>\\n<li>\\n<p>程序计数器</p>\\n</li>\\n<li>\\n<p>虚拟机栈</p>\\n</li>\\n<li>\\n<p>本地方法栈</p>\\n</li>\\n<li>\\n<p>堆</p>\\n</li>\\n<li>\\n<p>方法区</p>\\n</li>\\n</ol>\\n</blockquote>\\n<h2> 1.程序计数器</h2>\\n<h3> 1.1 定义</h3>\\n<p>Program Counter Register 程序计数器（寄存器）\\n作用，是记住下一条jvm指令的执行地址</p>\\n<h2> 特点</h2>\\n<p>是线程私有的\\n不会存在内存溢出</p>\\n<h2> 1.2 作用</h2>\"}")

if (import.meta.webpackHot) {
  import.meta.webpackHot.accept()
  if (__VUE_HMR_RUNTIME__.updatePageData) {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  }
}

if (import.meta.hot) {
  import.meta.hot.accept(({ data }) => {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  })
}
