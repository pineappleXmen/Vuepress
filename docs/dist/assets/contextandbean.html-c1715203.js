const e=JSON.parse('{"key":"v-baf78cd2","path":"/article/spring/springadvance/contextandbean.html","title":"容器与bean","lang":"zh-CN","frontmatter":{"lang":"zh-CN","title":"容器与bean","description":"容器的具体实现和bean的生命周期底层源码","category":["Spring"],"tag":["Spring","Advanced"],"head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/article/spring/springadvance/contextandbean.html"}],["meta",{"property":"og:site_name","content":"Pineapple Coding"}],["meta",{"property":"og:title","content":"容器与bean"}],["meta",{"property":"og:description","content":"容器的具体实现和bean的生命周期底层源码"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:tag","content":"Spring"}],["meta",{"property":"article:tag","content":"Advanced"}]]},"headers":[{"level":2,"title":"容器与 bean","slug":"容器与-bean","link":"#容器与-bean","children":[{"level":3,"title":"1) 容器接口","slug":"_1-容器接口","link":"#_1-容器接口","children":[]},{"level":3,"title":"2) 容器实现","slug":"_2-容器实现","link":"#_2-容器实现","children":[]},{"level":3,"title":"3) Bean 的生命周期","slug":"_3-bean-的生命周期","link":"#_3-bean-的生命周期","children":[]},{"level":3,"title":"4) Bean 后处理器","slug":"_4-bean-后处理器","link":"#_4-bean-后处理器","children":[]},{"level":3,"title":"5) BeanFactory 后处理器","slug":"_5-beanfactory-后处理器","link":"#_5-beanfactory-后处理器","children":[]},{"level":3,"title":"6) Aware 接口","slug":"_6-aware-接口","link":"#_6-aware-接口","children":[]},{"level":3,"title":"7) 初始化与销毁","slug":"_7-初始化与销毁","link":"#_7-初始化与销毁","children":[]},{"level":3,"title":"8) Scope","slug":"_8-scope","link":"#_8-scope","children":[]}]}],"git":{},"readingTime":{"minutes":16.55,"words":4966},"filePathRelative":"article/spring/springadvance/contextandbean.md","excerpt":"<h2> 容器与 bean</h2>\\n<h3> 1) 容器接口</h3>\\n<ul>\\n<li>\\n<p>BeanFactory 接口，典型功能有：</p>\\n<ul>\\n<li>getBean</li>\\n</ul>\\n</li>\\n<li>\\n<p>ApplicationContext 接口，是 BeanFactory 的子接口。它扩展了 BeanFactory 接口的功能，如：</p>\\n<ul>\\n<li>国际化</li>\\n<li>通配符方式获取一组 Resource 资源</li>\\n<li>整合 Environment 环境（能通过它获取各种来源的配置信息）</li>\\n<li>事件发布与监听，实现组件之间的解耦</li>\\n</ul>\\n</li>\\n</ul>"}');export{e as data};
