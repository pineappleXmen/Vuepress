import{_ as o,V as s,W as i,Y as t,Z as e,$ as n,D as d}from"./framework-3845b112.js";const _={},r=t("h1",{id:"动态规划",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#动态规划","aria-hidden":"true"},"#"),e(" 动态规划")],-1),h=t("h4",{id:"动态规划-1",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#动态规划-1","aria-hidden":"true"},"#"),e(" 动态规划")],-1),c=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"题号题目"),t("th",null,"类型"),t("th",null,"难度"),t("th",null,"状态说明"),t("th",null,"状态转移方程"),t("th",null,"链接")])],-1),u={style:{"text-align":"left"}},a={href:"https://www.wolai.com/meafa8eevhQnvZW9mCpTpx",title:"509. 斐波那契数",target:"_blank",rel:"noopener noreferrer"},p=t("td",null,"单序列,坐标型",-1),w=t("td",null,"简单",-1),f=t("td",null,"i表示第i个斐波那契数",-1),m=t("td",null,"dp[i]=dp[i-1]+dp[i-2]",-1),g={href:"https://leetcode.cn/problems/fibonacci-number/",title:"https://leetcode.cn/problems/fibonacci-number/",target:"_blank",rel:"noopener noreferrer"},j={style:{"text-align":"left"}},b={href:"https://www.wolai.com/5tkzpwMRkfcuF6LboGPRBR",title:"70.爬楼梯",target:"_blank",rel:"noopener noreferrer"},x=t("td",null,"单序列,坐标型",-1),k=t("td",null,"简单",-1),y=t("td",null,"i表示第i级台阶",-1),I=t("td",null,"dp[i]=dp[i-1]+dp[i-2]",-1),M={href:"https://leetcode.cn/problems/climbing-stairs/",title:"https://leetcode.cn/problems/climbing-stairs/",target:"_blank",rel:"noopener noreferrer"},A={style:{"text-align":"left"}},v={href:"https://www.wolai.com/2TmDF6VRXYwW2esxLwec4s",title:"746. 使用最小花费爬楼梯",target:"_blank",rel:"noopener noreferrer"},W=t("td",null,"单序列,坐标型",-1),U=t("td",null,"简单",-1),X=t("td",null,"i表示第i级台阶",-1),T=t("td",null,"dp[i]=min(dp[i−1]+cost[i−1],dp[i−2]+cost[i−2])",-1),N={href:"https://leetcode.cn/problems/min-cost-climbing-stairs/",title:"https://leetcode.cn/problems/min-cost-climbing-stairs/",target:"_blank",rel:"noopener noreferrer"},V={style:{"text-align":"left"}},B={href:"https://www.wolai.com/jEm1ky3Fx539xSCMLcQzzL",title:"264. 丑数 II",target:"_blank",rel:"noopener noreferrer"},C=t("td",null,"坐标型",-1),L=t("td",null,"中等",-1),Y=t("td",null,"dp[i]表示第i个丑数",-1),F=t("td",null,"dp[i] = min(dp[p2] * 2, dp[p3] * 3, dp[p5] * 5)",-1),D={href:"https://leetcode.cn/problems/ugly-number-ii/",title:"https://leetcode.cn/problems/ugly-number-ii/",target:"_blank",rel:"noopener noreferrer"},E={style:{"text-align":"left"}},J={href:"https://www.wolai.com/5RP5fwU98TPgyjKX61qYYr",title:"剑指 Offer 60. n个骰子的点数",target:"_blank",rel:"noopener noreferrer"},R=t("td",null,"坐标型",-1),q=t("td",null,"中等",-1),G=t("td",null,"dp[i][j]为第i次掷骰子时点数j出现的次数",-1),z=t("td",null,"dp[i][j] = sum(dp[i-1][j-k]) k=1~6 and j-k>=1",-1),H=t("td",null,null,-1),K={style:{"text-align":"left"}},Z={href:"https://www.wolai.com/2RT83FSHw2ccUWASkRCsb5",title:"剑指 Offer 42. 连续子数组的最大和",target:"_blank",rel:"noopener noreferrer"},S=t("td",null,"坐标型",-1),P=t("td",null,"中等",-1),Q=t("td",null,"dp[i] 表示以元素 nums[i] 为结尾的连续子数组最大和",-1),O=t("td",null,"dp[i] = max(nums[i], dp[i-1] + nums[i])",-1),$=t("td",null,null,-1),tt={style:{"text-align":"left"}},et={href:"https://www.wolai.com/78MVFQPtYwWCCVNBHuWxuw",title:"121.买卖股票的最佳时机",target:"_blank",rel:"noopener noreferrer"},lt=t("td",null,"单序列,坐标型",-1),nt=t("td",null,"简单",-1),ot=t("td",null,"dp[i] 表示第 i 天的最大利润",-1),st=t("td",null,"minprice = min(minprice, prices[i]) dp[i] = max(dp[i - 1], prices[i] - minprice)",-1),it=t("td",null,null,-1),dt={style:{"text-align":"left"}},_t={href:"https://www.wolai.com/5WH9hmvfcXdJFDAChaLG4b",title:"122.买卖股票的最佳时机 II",target:"_blank",rel:"noopener noreferrer"},rt=t("td",null,"坐标型",-1),ht=t("td",null,"中等",-1),ct=t("td",null,"dp[i][0] 表示第 i 天交易完后手里没有股票时的最大利润 dp[i][1] 表示第 i 天交易完后手里持有一支股票时的最大利润",-1),ut=t("td",null,"dp[i][0] = max(dp[i - 1][0], dp[i - 1][1] + prices[i]) dp[i][1] = max(dp[i - 1][1], dp[i - 1][0] - prices[i])",-1),at=t("td",null,null,-1),pt={style:{"text-align":"left"}},wt={href:"https://www.wolai.com/gJw9AixrZt9eZXUvKswLYE",title:"123. 买卖股票的最佳时机 III",target:"_blank",rel:"noopener noreferrer"},ft=t("td",null,"坐标型",-1),mt=t("td",null,"困难",-1),gt=t("td",null,"buy1表示第一次购买、sell1表示第一次售卖、buy2表示第二次购买、sell2表示第二次售卖",-1),jt=t("td",null,"buy1 = Math.max(buy1, -prices[i]); sell1 = Math.max(sell1, buy1 + prices[i]); buy2 = Math.max(buy2, sell1 - prices[i]); sell2 = Math.max(sell2, buy2 + prices[i]);",-1),bt=t("td",null,null,-1),xt={style:{"text-align":"left"}},kt={href:"https://www.wolai.com/fFd5eXpKdvNVgishDmauND",title:"188. 买卖股票的最佳时机 IV",target:"_blank",rel:"noopener noreferrer"},yt=t("td",null,"坐标型",-1),It=t("td",null,"困难",-1),Mt=t("td",null,"buy[i][j]表示在第i天刚好进行j次交易时 持有股票的最大收益",-1),At=t("td",null,"buy[i][j] = Math.max(buy[i - 1][j], sell[i - 1][j] - prices[i]); sell[i][j] = Math.max(sell[i - 1][j], buy[i - 1][j - 1] + prices[i]);",-1),vt=t("td",null,null,-1),Wt={style:{"text-align":"left"}},Ut={href:"https://www.wolai.com/negBcLggHie6Tx68NjnGqa",title:"309. 最佳买卖股票时机含冷冻期",target:"_blank",rel:"noopener noreferrer"},Xt=t("td",null,"坐标型",-1),Tt=t("td",null,"中等",-1),Nt=t("td",null,"dp[i][0]: 手上持有股票的最大收益 dp[i][1]: 手上不持有股票，并且处于冷冻期中的累计最大收益 dp[i][2]: 手上不持有股票，并且不在冷冻期中的累计最大收益",-1),Vt=t("td",null,"dp[i][0] = Math.max(dp[i - 1][0], dp[i - 1][2] - prices[i]); dp[i][1] = dp[i - 1][0] + prices[i]; dp[i][2] = Math.max(dp[i - 1][1], dp[i - 1][2]);",-1),Bt=t("td",null,null,-1),Ct={style:{"text-align":"left"}},Lt={href:"https://www.wolai.com/o645AjGNJgKcqNMpZ2wbGL",title:"714. 买卖股票的最佳时机含手续费",target:"_blank",rel:"noopener noreferrer"},Yt=t("td",null,"坐标型",-1),Ft=t("td",null,"中等",-1),Dt=t("td",null,"dp[i][0] 表示第 i 天交易完后手里没有股票时的最大利润 dp[i][1] 表示第 i 天交易完后手里持有一支股票时的最大利润",-1),Et=t("td",null,"dp[i][0]=Math.max(dp[i-1][0],dp[i-1][1]+prices[i]-fee); dp[i][1]=Math.max(dp[i-1][1],dp[i-1][0]-prices[i]);",-1),Jt=t("td",null,null,-1),Rt={style:{"text-align":"left"}},qt={href:"https://www.wolai.com/4T28cdfR6XEcxZGySjAby2",title:"62. 不同路径",target:"_blank",rel:"noopener noreferrer"},Gt=t("td",null,"路径型",-1),zt=t("td",null,"中等",-1),Ht=t("td",null,"dp[i][j]表示到坐标i，j时的不同路径数",-1),Kt=t("td",null,"if(i>0&&j>0) dp[i][j] = dp[i-1][j]+dp[i][j-1]; else if(i>0) dp[i][j]=dp[i-1][j]; else if(j>0) dp[i][j]=dp[i][j-1];",-1),Zt=t("td",null,null,-1),St={style:{"text-align":"left"}},Pt={href:"https://www.wolai.com/9Gr4vN2E64EoSDoCchJLJj",title:"63. 不同路径 II",target:"_blank",rel:"noopener noreferrer"},Qt=t("td",null,"路径型",-1),Ot=t("td",null,"中等",-1),$t=t("td",null,"dp[i][j]表示到坐标i，j时的不同路径数",-1),te=t("td",null,"if (grid[i][j] != 1) f[i][j] = f[i - 1][j] + f[i][j - 1]; ",-1),ee=t("td",null,null,-1),le={style:{"text-align":"left"}},ne={href:"https://www.wolai.com/ew1e2nA8YcX8AF9rZMkFhj",title:"64. 最小路径和",target:"_blank",rel:"noopener noreferrer"},oe=t("td",null,"路径型",-1),se=t("td",null,"中等",-1),ie=t("td",null,"dp[i][j]表示i，j位置的最小路径",-1),de=t("td",null,"dp[i][j]=Math.min(dp[i-1][j],dp[i][j-1])+grid[i][j];",-1),_e=t("td",null,null,-1),re={style:{"text-align":"left"}},he={href:"https://www.wolai.com/56FfM9qtrsMuTDFKUHLFgB",title:"174. 地下城游戏",target:"_blank",rel:"noopener noreferrer"},ce=t("td",null,"路径型",-1),ue=t("td",null,"困难",-1),ae=t("td",null,"从终点往起点反向dp dp[i][j]表示到达i，j位置时最少需要的血量",-1),pe=t("td",null,"dp[i][j] = Math.max(Math.min(dp[i+1][j],dp[i][j+1])-dungeon[i][j],1);",-1),we=t("td",null,null,-1),fe={style:{"text-align":"left"}},me={href:"https://www.wolai.com/oMZYU2C1tvniNRaaquxPwU",title:"329. 矩阵中的最长递增路径",target:"_blank",rel:"noopener noreferrer"},ge=t("td",null,"路径型",-1),je=t("td",null,"困难",-1),be=t("td",null,"i，j表示到达i，j时的最长递增路径",-1),xe=t("td",null,"dp[i][j] = max(dp[i][j], dp[nextI][nextJ] + 1) nextI, nextJ = [(i + 1, j), (i - 1, j), (i, j + 1), (i, j - 1)]",-1),ke=t("td",null,null,-1),ye={style:{"text-align":"left"}},Ie={href:"https://www.wolai.com/7v11snz7cY9DwbCoN9UZDk",title:"656. 金币路径",target:"_blank",rel:"noopener noreferrer"},Me=t("td",null,"路径型",-1),Ae=t("td",null,"困难",-1),ve=t("td",null,"dp[i]表示到达i处需要花费的最少金币（反向）",-1),We=t("td",null,"dp[i] = dp[j] + coins[i]",-1),Ue=t("td",null,null,-1),Xe={style:{"text-align":"left"}},Te={href:"https://www.wolai.com/4QyHmm57V2HzDEBPf7pGh",title:"198. 打家劫舍",target:"_blank",rel:"noopener noreferrer"},Ne=t("td",null,"单序列,路径型",-1),Ve=t("td",null,"中等",-1),Be=t("td",null,"dp[i]表示到达第i家时获得的最大收益",-1),Ce=t("td",null,"dp[i]=Math.max(dp[i-2]+nums[i],dp[i-1]);",-1),Le=t("td",null,null,-1),Ye={style:{"text-align":"left"}},Fe={href:"https://www.wolai.com/dnwUdpo7BorKVuzV7w4Yi6",title:"213. 打家劫舍 II",target:"_blank",rel:"noopener noreferrer"},De=t("td",null,"路径型",-1),Ee=t("td",null,"中等",-1),Je=t("td",null,"将区间分为0-n-1、1-n两份对两份分别使用198的方法",-1),Re=t("td",null,"dp[i]=Math.max(dp[i-2]+nums[i],dp[i-1]);",-1),qe=t("td",null,null,-1),Ge={style:{"text-align":"left"}},ze={href:"https://www.wolai.com/o2qyVa1oggJpNm5cLCSUvw",title:"276. 栅栏涂色",target:"_blank",rel:"noopener noreferrer"},He=t("td",null,"路径型",-1),Ke=t("td",null,"中等",-1),Ze=t("td",null,"dp[i]表示第i个栅栏的方法 如果与dp[i-1]不同，则有k-1种方法、如果与dp[i-1]相同，需要保证i-1与i-2不同i-1就有k-1种方法 同理i也有k-1种解法",-1),Se=t("td",null,"dp[i] = dp[i - 1] * (k - 1) + dp[i - 2] * (k - 1) =(dp[i−2]+dp[i−1])∗(k−1) ",-1),Pe=t("td",null,null,-1),Qe={style:{"text-align":"left"}},Oe={href:"https://www.wolai.com/9cbDqVnqxiWbxcJnuof2ve",title:"120. 三角形最小路径和",target:"_blank",rel:"noopener noreferrer"},$e=t("td",null,"路径型",-1),tl=t("td",null,"中等",-1),el=t("td",null,"f[i][j]f[i][j] 表示从三角形顶部走到位置 (i, j)(i,j) 的最小路径和。",-1),ll=t("td",null,"f[i][j]=min(f[i−1][j−1],f[i−1][j])+c[i][j]",-1),nl=t("td",null,null,-1),ol={style:{"text-align":"left"}},sl={href:"https://www.wolai.com/sTQ7YNG6XJaY1VkPX3kqbQ",title:"322. 零钱兑换",target:"_blank",rel:"noopener noreferrer"},il=t("td",null,"背包型,完全背包",-1),dl=t("td",null,"中等",-1),_l=t("td",null,"dp[i][j]表示对于前i种硬币，取出amount为j的最少硬币取法（完全背包）可以优化为一维dp[i]表示对于amount为i的最少取法",-1),rl=t("td",null,"dp[i][j]=Math.min(dp[i][j],dp[i][j-coins[i-1]]+1);或者采用一维 dp[i] = Math.min(dp[i], dp[i - coin] + 1);",-1),hl=t("td",null,null,-1),cl={style:{"text-align":"left"}},ul={href:"https://www.wolai.com/bfbXGTakWYB3vRBEUbu2EX",title:"518. 零钱兑换 II",target:"_blank",rel:"noopener noreferrer"},al=t("td",null,"背包型,完全背包",-1),pl=t("td",null,"中等",-1),wl=t("td",null,"dp[i]表示对于目标钱数i 有多少种可能",-1),fl=t("td",null,"dp[i] += dp[i - coin];",-1),ml=t("td",null,null,-1),gl={style:{"text-align":"left"}},jl={href:"https://www.wolai.com/i2B8sFBMGsnT21cFaQzQTF",title:"474. 一和零",target:"_blank",rel:"noopener noreferrer"},bl=t("td",null,"背包型,01背包",-1),xl=t("td",null,"中等",-1),kl=t("td",null,"01背包 dp[i][j]表示0的容量为i ，1的容量为j的子集中的最大个数",-1),yl=t("td",null,"dp[i][j]=Math.max(dp[i][j],dp[i-Zeros][j-Ones]+1);",-1),Il=t("td",null,null,-1),Ml={style:{"text-align":"left"}},Al={href:"https://www.wolai.com/7yGsk6gW2AJS4AWkr7TbUz",title:"416. 分割等和子集",target:"_blank",rel:"noopener noreferrer"},vl=t("td",null,"背包型,01背包",-1),Wl=t("td",null,"中等",-1),Ul=t("td",null,"01背包 dp[i]表示目标和为i时是否可以分割成功",-1),Xl=t("td",null,"dp[i]=dp[i]||dp[i-num];",-1),Tl=t("td",null,null,-1),Nl={style:{"text-align":"left"}},Vl={href:"https://www.wolai.com/agPEXT2YvWco4XtsUwuFyj",title:"1049. 最后一块石头的重量 II",target:"_blank",rel:"noopener noreferrer"},Bl=t("td",null,"背包型,01背包",-1),Cl=t("td",null,"中等",-1),Ll=t("td",null,"01背包 背包容量为sum/2 找到最大值 答案就为 sum-2*dp[n] dp[i]表示容量为i时的最小答案",-1),Yl=t("td",null,"dp[i]=Math.max(dp[i],dp[i-stone]+stone);",-1),Fl=t("td",null,null,-1),Dl={style:{"text-align":"left"}},El={href:"https://www.wolai.com/7ZAtEMtvCnsdJZZyiPsaGw",title:"494. 目标和",target:"_blank",rel:"noopener noreferrer"},Jl=t("td",null,"背包型,01背包",-1),Rl=t("td",null,"中等",-1),ql=t("td",null,"将加数拆分为两块 一块为加数写作a 一块为减数为b 则最终target应该等于a-b=target 而a+b=sum两式相加得a=（S+sum）/2剩下的一半即为减数 所以题目就变成求解 背包容量为a的种类数",-1),Gl=t("td",null,"dp[i]+=dp[i-num];",-1),zl=t("td",null,null,-1),Hl={style:{"text-align":"left"}},Kl={href:"https://www.wolai.com/mAnXjVKs6NAXs3WWSzdaw7",title:"377. 组合总和 Ⅳ",target:"_blank",rel:"noopener noreferrer"},Zl=t("td",null,"背包型,01背包",-1),Sl=t("td",null,"中等",-1),Pl=t("td",null,"同494",-1),Ql=t("td",null,"dp[i]+=dp[i-num];",-1),Ol=t("td",null,null,-1),$l={style:{"text-align":"left"}},tn={href:"https://www.wolai.com/j6qCYjL9pmWpa52DaTzUH4",title:"115. 不同的子序列",target:"_blank",rel:"noopener noreferrer"},en=t("td",null,"双序列",-1),ln=t("td",null,"困难",-1),nn=t("td",null,"dp[i][j]表示在target的前j个字符在s的前i个字符中出现的次数",-1),on=t("td",null,"if(s.charAt(i-1)==t.charAt(j-1)) dp[i][j]=dp[i-1][j]+dp[i-1][j-1]; else dp[i][j]=dp[i-1][j];",-1),sn=t("td",null,null,-1),dn={style:{"text-align":"left"}},_n={href:"https://www.wolai.com/3ipEmbarEp7EdPHK1UxWCt",title:"91. 解码方法",target:"_blank",rel:"noopener noreferrer"},rn=t("td",null,"单序列",-1),hn=t("td",null,"中等",-1),cn=t("td",null,"通过dfs recursive方式记录搜索结果 memo[i]表示i...length的解码方法个数",-1),un=t("td",null,"memo[i]=dfs(s,i+1,memo)+dfs(s,i+2,memo);",-1),an=t("td",null,null,-1),pn={style:{"text-align":"left"}},wn={href:"https://www.wolai.com/gATXamtVwk2KaGvLyc5W9X",title:"139. 单词拆分",target:"_blank",rel:"noopener noreferrer"},fn=t("td",null,"单序列",-1),mn=t("td",null,"中等",-1),gn=t("td",null,"dp[i]记录索引到i时字典是否包含该单词",-1),jn=t("td",null,"dfs或iterative way",-1),bn=t("td",null,null,-1),xn={style:{"text-align":"left"}},kn={href:"https://www.wolai.com/jqqsoac3k6sYcbr8u8cVo7",title:"140. 单词拆分 II",target:"_blank",rel:"noopener noreferrer"},yn=t("td",null,"单序列",-1),In=t("td",null,"困难",-1),Mn=t("td",null,"同上 需要记录答案",-1),An=t("td",null,null,-1),vn=t("td",null,null,-1),Wn={style:{"text-align":"left"}},Un={href:"https://www.wolai.com/razhWimkHjBhsxMteuExjg",title:"53. 最大子数组和",target:"_blank",rel:"noopener noreferrer"},Xn=t("td",null,"单序列",-1),Tn=t("td",null,"简单",-1),Nn=t("td",null,"dp[i]表示到达i位置时前i个元素的最大子数组和为多少",-1),Vn=t("td",null,"dp[i]=max(dp[i-1],dp[i]+num[i])",-1),Bn=t("td",null,null,-1),Cn={style:{"text-align":"left"}},Ln={href:"https://www.wolai.com/iGiYbjfp7caFuiioSnS1hx",title:"152. 乘积最大子数组",target:"_blank",rel:"noopener noreferrer"},Yn=t("td",null,"单序列",-1),Fn=t("td",null,"中等",-1),Dn=t("td",null,"维护一个maxdp和一个mindp 如果当前数大于0则max为nums*max",-1),En=t("td",null,[e("if(nums[i]>0) max[i]=Math.max(nums[i],nums[i]"),t("em",null,"max[i-1]); min[i]=Math.min(nums[i],nums[i]"),e(" min[i-1]); else{ max[i]=Math.max(nums[i],nums[i]"),t("em",null,"min[i-1]); min[i]=Math.min(nums[i],nums[i]"),e(" max[i-1]); }")],-1),Jn=t("td",null,null,-1),Rn={style:{"text-align":"left"}},qn={href:"https://www.wolai.com/jVFMw5XbH6HCy3kEX2kDXX",title:"300. 最长递增子序列",target:"_blank",rel:"noopener noreferrer"},Gn=t("td",null,"单序列",-1),zn=t("td",null,"中等",-1),Hn=t("td",null,"维护一个单调栈 有比末尾数字大的数进来时 在dp中通过二分法寻找插入位置 最后返回size就是答案 dp[i]为构造的答案",-1),Kn=t("td",null,null,-1),Zn=t("td",null,null,-1),Sn={style:{"text-align":"left"}},Pn={href:"https://www.wolai.com/tiAJTHUBrr2RWzJqqEJ57K",title:"1713. 得到子序列的最少操作次数",target:"_blank",rel:"noopener noreferrer"},Qn=t("td",null,"单序列",-1),On=t("td",null,"困难",-1),$n=t("td",null,"利用300题解 计算target序列的下标的最长递增子序列数 target-res即为",-1),to=t("td",null,"同300",-1),eo=t("td",null,null,-1),lo={style:{"text-align":"left"}},no={href:"https://www.wolai.com/uahGXKduDVnW79cF9dsaEM",title:"97. 交错字符串",target:"_blank",rel:"noopener noreferrer"},oo=t("td",null,"双序列",-1),so=t("td",null,"中等",-1),io=t("td",null,"dp[i][j]表示s1的前i个和s2的前j个字符能否组成s3的前i+j个字符 如果能则true",-1),_o=t("td",null,"dp[i][j]=(s3.charAt(i+j-1)==s1.charAt(i-1)&&dp[i-1][j])||(s3.charAt(i+j-1)==s2.charAt(j-1)&&dp[i][j-1]);",-1),ro=t("td",null,null,-1),ho={style:{"text-align":"left"}},co={href:"https://www.wolai.com/8V6pYUDe8obGMTAbM7MhiU",title:"72. 编辑距离",target:"_blank",rel:"noopener noreferrer"},uo=t("td",null,"双序列",-1),ao=t("td",null,"困难",-1),po=t("td",null,"dp[i][j]表示a的前i个和b的前j个之间的编辑距离 A后有三种可能 a的char与b相等 则直接拿i-1，j-1即可， a删除一个与b相等，a替换一个与b相等，a插入一个与b相等",-1),wo=t("td",null,"if(word1.charAt(i-1)==word2.charAt(j-1)) dp[i][j]=dp[i-1][j-1]; else dp[i][j]=Math.min(Math.min(dp[i-1][j]+1,dp[i][j-1]+1),dp[i-1][j-1]+1);",-1),fo=t("td",null,null,-1),mo={style:{"text-align":"left"}},go={href:"https://www.wolai.com/j6jn8NdbJPfAmCaGVd1fvD",title:"1143. 最长公共子序列 lcs",target:"_blank",rel:"noopener noreferrer"},jo=t("td",null,"双序列",-1),bo=t("td",null,"中等",-1),xo=t("td",null,"dp[i][j]表示s1的前i个字符串与s2的前j个字符组成的最长公共子序列",-1),ko=t("td",null,"if(word1.charAt(i-1)==word2.charAt(j-1)) dp[i][j]=1+dp[i-1][j-1]; else dp[i][j]=Math.max(dp[i-1][j]+1,dp[i][j-1]+1);",-1),yo=t("td",null,null,-1),Io={style:{"text-align":"left"}},Mo={href:"https://www.wolai.com/hPtUzccBqAsjv4unNZioag",title:"1312. 让字符串成为回文串的最少插入次数",target:"_blank",rel:"noopener noreferrer"},Ao=t("td",null,"双序列",-1),vo=t("td",null,"困难",-1),Wo=t("td",null,"lcs变形 将字符串翻转 再找翻转的字符串与原来的lcs 答案为length-lcs",-1),Uo=t("td",null,"同1143",-1),Xo=t("td",null,null,-1),To={style:{"text-align":"left"}},No={href:"https://www.wolai.com/wUzjHPWL7enJpKggbx4AVr",title:"516. 最长回文子序列",target:"_blank",rel:"noopener noreferrer"},Vo=t("td",null,"双序列,区间型",-1),Bo=t("td",null,"中等",-1),Co=t("td",null,"lcs 直接返回reverse后的字符串",-1),Lo=t("td",null,"同1143",-1),Yo=t("td",null,null,-1),Fo={style:{"text-align":"left"}},Do={href:"https://www.wolai.com/sDoaeAX2UwKwF7TY4hc3b7",title:"1216. 验证回文字符串 III",target:"_blank",rel:"noopener noreferrer"},Eo=t("td",null,"双序列,区间型",-1),Jo=t("td",null,"困难",-1),Ro=t("td",null,"lcs 判断s.length-lcs是否<=k",-1),qo=t("td",null,"同1143",-1),Go=t("td",null,null,-1),zo={style:{"text-align":"left"}},Ho={href:"https://www.wolai.com/7s4LWtcRf7uJCiNiUTRNJS",title:"5. 最长回文子串",target:"_blank",rel:"noopener noreferrer"},Ko=t("td",null,"区间型",-1),Zo=t("td",null,"中等",-1),So=t("td",null,"dp[i][j]表示字符串在i...j范围内是否为回文串 如果chari==charj 则看内部是否是回文串 i+1到j-1是否是回文串",-1),Po=t("td",null,"if(s.charAt(i)==s.charAt(j)&&((j-i)<=2||dp[i+1][j-1])) dp[i][j]=true; ",-1),Qo=t("td",null,null,-1),Oo={style:{"text-align":"left"}},$o={href:"https://www.wolai.com/9ou6T442YY5cGKxCBhQkBH",title:"312. 戳气球",target:"_blank",rel:"noopener noreferrer"},ts=t("td",null,"区间型",-1),es=t("td",null,"困难",-1),ls=t("td",null,"dp[i][j]表示在i...j范围内拿到的最多硬币数",-1),ns=t("td",null,[e("dfs+memo left = dfs(start,i-1,nums,dp); int right = dfs(i+1,end,nums,dp); int cur = get(nums,i)"),t("em",null,"get(nums,start-1)"),e(" get(nums,end+1); max = Math.max(max,cur+left+right);")],-1),os=t("td",null,null,-1),ss={style:{"text-align":"left"}},is={href:"https://www.wolai.com/ksFTQJPnfmRMb9be7xbLSP",title:"1039. 多边形三角剖分的最低得分",target:"_blank",rel:"noopener noreferrer"},ds=t("td",null,"区间型",-1),_s=t("td",null,"中等",-1),rs=t("td",null,"同312 需要注意的是多边形至少要有三条边",-1),hs=t("td",null,null,-1),cs=t("td",null,null,-1),us={style:{"text-align":"left"}},as={href:"https://www.wolai.com/6sBcrBFLwt6t3CqsE12Jir",title:"221. 最大正方形",target:"_blank",rel:"noopener noreferrer"},ps=t("td",null,"坐标型",-1),ws=t("td",null,"中等",-1),fs=t("td",null,"dp[i][j]表明以i，j为右下角的最大正方形的面积",-1),ms=t("td",null,"dp[i][j]=Math.min(Math.min(dp[i-1][j],dp[i][j-1]),dp[i-1][j-1])+1;",-1),gs=t("td",null,null,-1),js={style:{"text-align":"left"}},bs={href:"https://www.wolai.com/9cDKTN33nZi61bexaQk36x",title:"294. 翻转游戏 II",target:"_blank",rel:"noopener noreferrer"},xs=t("td",null,"博弈型",-1),ks=t("td",null,"中等",-1),ys=t("td",null,"dfs+memo",-1),Is=t("td",null,null,-1),Ms=t("td",null,null,-1),As={style:{"text-align":"left"}},vs={href:"https://www.wolai.com/gWEZ8RBd4gciA2XCDQ3v1T",title:"292. Nim 游戏",target:"_blank",rel:"noopener noreferrer"},Ws=t("td",null,"博弈型",-1),Us=t("td",null,"中等",-1),Xs=t("td",null,"return n%4!=0;",-1),Ts=t("td",null,null,-1),Ns=t("td",null,null,-1),Vs={style:{"text-align":"left"}},Bs={href:"https://www.wolai.com/kWZAxvwUtfo7wgpWfUmTBs",title:"877. 石子游戏",target:"_blank",rel:"noopener noreferrer"},Cs=t("td",null,"博弈型",-1),Ls=t("td",null,"中等",-1),Ys=t("td",null,"memo+dfs",-1),Fs=t("td",null,"memo[i][j]= Math.max(nums[i]-dfs(nums,i+1,j,memo),nums[j]-dfs(nums,i,j-1,memo));",-1),Ds=t("td",null,null,-1),Es={style:{"text-align":"left"}},Js={href:"https://www.wolai.com/c2RLoGSk1ARzUYvdkRAdxW",title:"376. 摆动序列",target:"_blank",rel:"noopener noreferrer"},Rs=t("td",null,null,-1),qs=t("td",null,"中等",-1),Gs=t("td",null,"贪心 或 dp 变一维",-1),zs=t("td",null,"if (nums[i] > nums[i - 1]) up = down + 1; else if (nums[i] < nums[i - 1]) down = up + 1;",-1),Hs=t("td",null,null,-1),Ks={style:{"text-align":"left"}},Zs={href:"https://www.wolai.com/j4NNNWS33ovKCs6YLUXXN3",title:"487. 最大连续1的个数 II",target:"_blank",rel:"noopener noreferrer"},Ss=t("td",null,"单序列,行使权力",-1),Ps=t("td",null,"中等",-1),Qs=t("td",null,"dp[i][0]表示以当前元素结尾 没有行使翻转权利的最长连续 1 dp[i][1]为行使权利后的结果",-1),Os=t("td",null,"if(nums[i]==1){ dp[i][0]=dp[i-1][0]+1; dp[i][1]=dp[i-1][1]+1; }else{ dp[i][0]=0; dp[i][1]=dp[i-1][0]+1; }",-1),$s=t("td",null,null,-1),ti={style:{"text-align":"left"}},ei={href:"https://www.wolai.com/bZ5ji7KpYJQUQivDq8md7m",title:"1186. 删除一次得到子数组最大和",target:"_blank",rel:"noopener noreferrer"},li=t("td",null,"单序列,行使权力",-1),ni=t("td",null,"中等",-1),oi=t("td",null,"dp[i][0]表示以当前元素结尾 没有行使删除权利的最长连续 1 dp[i][1]为行使删除权利后的结果",-1),si=t("td",null,"dp[i][0]=Math.max(dp[i-1][0]+arr[i],arr[i]); dp[i][1]=Math.max(dp[i-1][0],dp[i-1][1]+arr[i]);",-1),ii=t("td",null,null,-1),di={style:{"text-align":"left"}},_i={href:"https://www.wolai.com/sRnkdcRnynoqt8D5t1dqMm",title:"1092. 最短公共超序列",target:"_blank",rel:"noopener noreferrer"},ri=t("td",null,"双序列",-1),hi=t("td",null,"困难",-1),ci=t("td",null,"LCS 再对dp结果进行处理拿到答案序列",-1),ui=t("td",null,"同LCS",-1),ai=t("td",null,null,-1),pi={style:{"text-align":"left"}},wi={href:"https://www.wolai.com/tC99mTHVjW7wNVgd8C2Zn4",title:"1105. 填充书架",target:"_blank",rel:"noopener noreferrer"},fi=t("td",null,"单序列,时间序列加强",-1),mi=t("td",null,"中等",-1),gi=t("td",null,"i表示以第i本书作为上一层的最后一本书的最小高度",-1),ji=t("td",null,"levelWidth+=books[j-1][0]; if(levelWidth>shelfWidth) break; levelMaxHeight=Math.max(levelMaxHeight,books[j-1][1]); dp[i]=Math.min(dp[i],dp[j-1]+levelMaxHeight);",-1),bi=t("td",null,null,-1),xi={style:{"text-align":"left"}},ki={href:"https://www.wolai.com/92ckzocMy1n4B71bLutmXp",title:"1278. 分割回文串 III",target:"_blank",rel:"noopener noreferrer"},yi=t("td",null,"区间型",-1),Ii=t("td",null,"困难",-1),Mi=t("td",null,"dp[i][j]表示前i个字符分割为k个区间需要改动的最小字符个数 对于前i个字符来说 分成的第k个区间取决于第k-1个区间再加上count最后一个区间的次数 在k-1，i的区间内依次遍历即可",-1),Ai=t("td",null,"for(int i=0;i<=n;i++) for(int j=1;j<=Math.min(i,k);j++){ if(j==1) dp[i][j]=count(s.substring(0,i)); for(int m=i-1;m>=j-1;m--){ dp[i][j]=Math.min(dp[i][j],dp[m][j-1]+count(s.substring(m,i)));",-1),vi=t("td",null,null,-1),Wi={style:{"text-align":"left"}},Ui={href:"https://www.wolai.com/k1KbFzdVUxPpRcice4tkA8",title:"813. 最大平均值和的分组",target:"_blank",rel:"noopener noreferrer"},Xi=t("td",null,"区间型",-1),Ti=t("td",null,"中等",-1),Ni=t("td",null,"类似1278 需要初始化dp数组",-1),Vi=t("td",null,null,-1),Bi=t("td",null,null,-1),Ci={style:{"text-align":"left"}},Li={href:"https://www.wolai.com/8Twtd8Dun9KcL9oXBQTBhc",title:"410. 分割数组的最大值",target:"_blank",rel:"noopener noreferrer"},Yi=t("td",null,"区间型",-1),Fi=t("td",null,"困难",-1),Di=t("td",null,"类似1278 本题可以采用二分猜答案",-1),Ei=t("td",null,null,-1),Ji=t("td",null,null,-1),Ri={href:"https://www.wolai.com/t3zbqB3XRM8iM1qshU9dUh",title:"坐标型动态规划",target:"_blank",rel:"noopener noreferrer"};function qi(Gi,zi){const l=d("ExternalLinkIcon");return s(),i("div",null,[r,h,t("table",null,[c,t("tbody",null,[t("tr",null,[t("td",u,[t("a",a,[e("509. 斐波那契数"),n(l)])]),p,w,f,m,t("td",null,[t("a",g,[e("https://leetcode.cn/problems/fibonacci-number/"),n(l)])])]),t("tr",null,[t("td",j,[t("a",b,[e("70.爬楼梯"),n(l)])]),x,k,y,I,t("td",null,[t("a",M,[e("https://leetcode.cn/problems/climbing-stairs/"),n(l)])])]),t("tr",null,[t("td",A,[t("a",v,[e("746. 使用最小花费爬楼梯"),n(l)])]),W,U,X,T,t("td",null,[t("a",N,[e("https://leetcode.cn/problems/min-cost-climbing-stairs/"),n(l)])])]),t("tr",null,[t("td",V,[t("a",B,[e("264. 丑数 II"),n(l)])]),C,L,Y,F,t("td",null,[t("a",D,[e("https://leetcode.cn/problems/ugly-number-ii/"),n(l)])])]),t("tr",null,[t("td",E,[t("a",J,[e("剑指 Offer 60. n个骰子的点数"),n(l)])]),R,q,G,z,H]),t("tr",null,[t("td",K,[t("a",Z,[e("剑指 Offer 42. 连续子数组的最大和"),n(l)])]),S,P,Q,O,$]),t("tr",null,[t("td",tt,[t("a",et,[e("121.买卖股票的最佳时机"),n(l)])]),lt,nt,ot,st,it]),t("tr",null,[t("td",dt,[t("a",_t,[e("122.买卖股票的最佳时机 II"),n(l)])]),rt,ht,ct,ut,at]),t("tr",null,[t("td",pt,[t("a",wt,[e("123. 买卖股票的最佳时机 III"),n(l)])]),ft,mt,gt,jt,bt]),t("tr",null,[t("td",xt,[t("a",kt,[e("188. 买卖股票的最佳时机 IV"),n(l)])]),yt,It,Mt,At,vt]),t("tr",null,[t("td",Wt,[t("a",Ut,[e("309. 最佳买卖股票时机含冷冻期"),n(l)])]),Xt,Tt,Nt,Vt,Bt]),t("tr",null,[t("td",Ct,[t("a",Lt,[e("714. 买卖股票的最佳时机含手续费"),n(l)])]),Yt,Ft,Dt,Et,Jt]),t("tr",null,[t("td",Rt,[t("a",qt,[e("62. 不同路径"),n(l)])]),Gt,zt,Ht,Kt,Zt]),t("tr",null,[t("td",St,[t("a",Pt,[e("63. 不同路径 II"),n(l)])]),Qt,Ot,$t,te,ee]),t("tr",null,[t("td",le,[t("a",ne,[e("64. 最小路径和"),n(l)])]),oe,se,ie,de,_e]),t("tr",null,[t("td",re,[t("a",he,[e("174. 地下城游戏"),n(l)])]),ce,ue,ae,pe,we]),t("tr",null,[t("td",fe,[t("a",me,[e("329. 矩阵中的最长递增路径"),n(l)])]),ge,je,be,xe,ke]),t("tr",null,[t("td",ye,[t("a",Ie,[e("656. 金币路径"),n(l)])]),Me,Ae,ve,We,Ue]),t("tr",null,[t("td",Xe,[t("a",Te,[e("198. 打家劫舍"),n(l)])]),Ne,Ve,Be,Ce,Le]),t("tr",null,[t("td",Ye,[t("a",Fe,[e("213. 打家劫舍 II"),n(l)])]),De,Ee,Je,Re,qe]),t("tr",null,[t("td",Ge,[t("a",ze,[e("276. 栅栏涂色"),n(l)])]),He,Ke,Ze,Se,Pe]),t("tr",null,[t("td",Qe,[t("a",Oe,[e("120. 三角形最小路径和"),n(l)])]),$e,tl,el,ll,nl]),t("tr",null,[t("td",ol,[t("a",sl,[e("322. 零钱兑换"),n(l)])]),il,dl,_l,rl,hl]),t("tr",null,[t("td",cl,[t("a",ul,[e("518. 零钱兑换 II"),n(l)])]),al,pl,wl,fl,ml]),t("tr",null,[t("td",gl,[t("a",jl,[e("474. 一和零"),n(l)])]),bl,xl,kl,yl,Il]),t("tr",null,[t("td",Ml,[t("a",Al,[e("416. 分割等和子集"),n(l)])]),vl,Wl,Ul,Xl,Tl]),t("tr",null,[t("td",Nl,[t("a",Vl,[e("1049. 最后一块石头的重量 II"),n(l)])]),Bl,Cl,Ll,Yl,Fl]),t("tr",null,[t("td",Dl,[t("a",El,[e("494. 目标和"),n(l)])]),Jl,Rl,ql,Gl,zl]),t("tr",null,[t("td",Hl,[t("a",Kl,[e("377. 组合总和 Ⅳ"),n(l)])]),Zl,Sl,Pl,Ql,Ol]),t("tr",null,[t("td",$l,[t("a",tn,[e("115. 不同的子序列"),n(l)])]),en,ln,nn,on,sn]),t("tr",null,[t("td",dn,[t("a",_n,[e("91. 解码方法"),n(l)])]),rn,hn,cn,un,an]),t("tr",null,[t("td",pn,[t("a",wn,[e("139. 单词拆分"),n(l)])]),fn,mn,gn,jn,bn]),t("tr",null,[t("td",xn,[t("a",kn,[e("140. 单词拆分 II"),n(l)])]),yn,In,Mn,An,vn]),t("tr",null,[t("td",Wn,[t("a",Un,[e("53. 最大子数组和"),n(l)])]),Xn,Tn,Nn,Vn,Bn]),t("tr",null,[t("td",Cn,[t("a",Ln,[e("152. 乘积最大子数组"),n(l)])]),Yn,Fn,Dn,En,Jn]),t("tr",null,[t("td",Rn,[t("a",qn,[e("300. 最长递增子序列"),n(l)])]),Gn,zn,Hn,Kn,Zn]),t("tr",null,[t("td",Sn,[t("a",Pn,[e("1713. 得到子序列的最少操作次数"),n(l)])]),Qn,On,$n,to,eo]),t("tr",null,[t("td",lo,[t("a",no,[e("97. 交错字符串"),n(l)])]),oo,so,io,_o,ro]),t("tr",null,[t("td",ho,[t("a",co,[e("72. 编辑距离"),n(l)])]),uo,ao,po,wo,fo]),t("tr",null,[t("td",mo,[t("a",go,[e("1143. 最长公共子序列 lcs"),n(l)])]),jo,bo,xo,ko,yo]),t("tr",null,[t("td",Io,[t("a",Mo,[e("1312. 让字符串成为回文串的最少插入次数"),n(l)])]),Ao,vo,Wo,Uo,Xo]),t("tr",null,[t("td",To,[t("a",No,[e("516. 最长回文子序列"),n(l)])]),Vo,Bo,Co,Lo,Yo]),t("tr",null,[t("td",Fo,[t("a",Do,[e("1216. 验证回文字符串 III"),n(l)])]),Eo,Jo,Ro,qo,Go]),t("tr",null,[t("td",zo,[t("a",Ho,[e("5. 最长回文子串"),n(l)])]),Ko,Zo,So,Po,Qo]),t("tr",null,[t("td",Oo,[t("a",$o,[e("312. 戳气球"),n(l)])]),ts,es,ls,ns,os]),t("tr",null,[t("td",ss,[t("a",is,[e("1039. 多边形三角剖分的最低得分"),n(l)])]),ds,_s,rs,hs,cs]),t("tr",null,[t("td",us,[t("a",as,[e("221. 最大正方形"),n(l)])]),ps,ws,fs,ms,gs]),t("tr",null,[t("td",js,[t("a",bs,[e("294. 翻转游戏 II"),n(l)])]),xs,ks,ys,Is,Ms]),t("tr",null,[t("td",As,[t("a",vs,[e("292. Nim 游戏"),n(l)])]),Ws,Us,Xs,Ts,Ns]),t("tr",null,[t("td",Vs,[t("a",Bs,[e("877. 石子游戏"),n(l)])]),Cs,Ls,Ys,Fs,Ds]),t("tr",null,[t("td",Es,[t("a",Js,[e("376. 摆动序列"),n(l)])]),Rs,qs,Gs,zs,Hs]),t("tr",null,[t("td",Ks,[t("a",Zs,[e("487. 最大连续1的个数 II"),n(l)])]),Ss,Ps,Qs,Os,$s]),t("tr",null,[t("td",ti,[t("a",ei,[e("1186. 删除一次得到子数组最大和"),n(l)])]),li,ni,oi,si,ii]),t("tr",null,[t("td",di,[t("a",_i,[e("1092. 最短公共超序列"),n(l)])]),ri,hi,ci,ui,ai]),t("tr",null,[t("td",pi,[t("a",wi,[e("1105. 填充书架"),n(l)])]),fi,mi,gi,ji,bi]),t("tr",null,[t("td",xi,[t("a",ki,[e("1278. 分割回文串 III"),n(l)])]),yi,Ii,Mi,Ai,vi]),t("tr",null,[t("td",Wi,[t("a",Ui,[e("813. 最大平均值和的分组"),n(l)])]),Xi,Ti,Ni,Vi,Bi]),t("tr",null,[t("td",Ci,[t("a",Li,[e("410. 分割数组的最大值"),n(l)])]),Yi,Fi,Di,Ei,Ji])])]),t("p",null,[t("a",Ri,[e("坐标型动态规划"),n(l)])])])}const Ki=o(_,[["render",qi],["__file","动态规划.html.vue"]]);export{Ki as default};
