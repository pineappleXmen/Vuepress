import{_ as p,V as u,W as d,$ as e,a1 as a,Y as n,Z as t,a0 as k,D as l}from"./framework-3845b112.js";const m={},h=k(`<h1 id="二分法" tabindex="-1"><a class="header-anchor" href="#二分法" aria-hidden="true">#</a> 二分法</h1><p>二分类型题目一般有两类</p><p><strong>查找有序集合中某个值的位置</strong></p><p><strong>通过二分缩小范围猜答案</strong></p><h2 id="查找有序集合中某个值的位置" tabindex="-1"><a class="header-anchor" href="#查找有序集合中某个值的位置" aria-hidden="true">#</a> 查找有序集合中某个值的位置</h2><p>我们一般会将整个区间分为左侧和右侧。通过循环不变量获取最终的答案。</p><p><strong>闭区间还是开区间（初始化）</strong></p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>left = 0 right = n-1
left = -1 right = n
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>循环判断条件（划分区间依据）</strong></p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>if nums[mid] &lt; target   //左侧为&lt;target 右侧为&gt;=target
if nums[mid] &lt;= target  //左侧为&lt;=target 右侧为&gt;target
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>循环转移条件</strong></p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>left = mid+1
right = mid-1  //闭区间转移条件 保证转移后仍为闭区间

left = mid
right = mid-1 //左开右闭区间

left = mid+1
right = mid   //左闭右开区间
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>循环不变量（确定答案）</strong></p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>L-1始终会&lt;target 始终在左侧
R+1始终会&gt;=target 始终在右侧
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="二分法-实现代码" tabindex="-1"><a class="header-anchor" href="#二分法-实现代码" aria-hidden="true">#</a> 二分法 实现代码</h2>`,15),b=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{class:"language-java"},[n("code",null,[n("span",{class:"token comment"},"//闭区间 左侧<target 右侧>=target"),t(`
`),n("span",{class:"token keyword"},"public"),t(),n("span",{class:"token keyword"},"int"),t(),n("span",{class:"token function"},"search"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"int"),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},"]"),t(" nums"),n("span",{class:"token punctuation"},","),t(),n("span",{class:"token keyword"},"int"),t(" target"),n("span",{class:"token punctuation"},")"),t(),n("span",{class:"token punctuation"},"{"),t(`
        `),n("span",{class:"token keyword"},"int"),t(" left "),n("span",{class:"token operator"},"="),t(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},";"),t(`
        `),n("span",{class:"token keyword"},"int"),t(" right "),n("span",{class:"token operator"},"="),t(" nums"),n("span",{class:"token punctuation"},"."),t("length"),n("span",{class:"token operator"},"-"),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},";"),t(`
        `),n("span",{class:"token keyword"},"while"),n("span",{class:"token punctuation"},"("),t("left"),n("span",{class:"token operator"},"<="),t("right"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"{"),t("                "),n("span",{class:"token comment"},"//区间不为空"),t(`
            `),n("span",{class:"token keyword"},"int"),t(" mid "),n("span",{class:"token operator"},"="),t(" left"),n("span",{class:"token operator"},"+"),n("span",{class:"token punctuation"},"("),t("right"),n("span",{class:"token operator"},"-"),t("left"),n("span",{class:"token punctuation"},")"),n("span",{class:"token operator"},"/"),n("span",{class:"token number"},"2"),n("span",{class:"token punctuation"},";"),t(),n("span",{class:"token comment"},"//下取整"),t(`
            `),n("span",{class:"token keyword"},"if"),n("span",{class:"token punctuation"},"("),t("nums"),n("span",{class:"token punctuation"},"["),t("mid"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token operator"},"<"),t("target"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"{"),t(`
                left `),n("span",{class:"token operator"},"="),t(" mid"),n("span",{class:"token operator"},"+"),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},";"),t(`
            `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token keyword"},"else"),n("span",{class:"token punctuation"},"{"),t(`
                right `),n("span",{class:"token operator"},"="),t(" mid"),n("span",{class:"token operator"},"-"),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},";"),t(`
            `),n("span",{class:"token punctuation"},"}"),t(`
        `),n("span",{class:"token punctuation"},"}"),t(`
        `),n("span",{class:"token keyword"},"return"),t(" nums"),n("span",{class:"token punctuation"},"["),t("left"),n("span",{class:"token operator"},"+"),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token operator"},"=="),t("target"),n("span",{class:"token operator"},"?"),t("left"),n("span",{class:"token operator"},":"),n("span",{class:"token operator"},"-"),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},";"),t(`
    `),n("span",{class:"token comment"},"//return时需注意，L+1一定在右侧,R-1一定在左侧"),t(`
`),n("span",{class:"token punctuation"},"}"),t(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),g=n("div",{class:"language-python line-numbers-mode","data-ext":"py"},[n("pre",{class:"language-python"},[n("code",null,[n("span",{class:"token keyword"},"class"),t(),n("span",{class:"token class-name"},"Solution"),n("span",{class:"token punctuation"},":"),t(`
    `),n("span",{class:"token keyword"},"def"),t(),n("span",{class:"token function"},"searchInsert"),n("span",{class:"token punctuation"},"("),t("self"),n("span",{class:"token punctuation"},","),t(" nums"),n("span",{class:"token punctuation"},":"),t(" List"),n("span",{class:"token punctuation"},"["),n("span",{class:"token builtin"},"int"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},","),t(" target"),n("span",{class:"token punctuation"},":"),t(),n("span",{class:"token builtin"},"int"),n("span",{class:"token punctuation"},")"),t(),n("span",{class:"token operator"},"-"),n("span",{class:"token operator"},">"),t(),n("span",{class:"token builtin"},"int"),n("span",{class:"token punctuation"},":"),t(`
        left `),n("span",{class:"token operator"},"="),t(),n("span",{class:"token number"},"0"),t(`
        right `),n("span",{class:"token operator"},"="),t(),n("span",{class:"token builtin"},"len"),n("span",{class:"token punctuation"},"("),t("nums"),n("span",{class:"token punctuation"},")"),n("span",{class:"token operator"},"-"),n("span",{class:"token number"},"1"),t(`
        `),n("span",{class:"token keyword"},"while"),n("span",{class:"token punctuation"},"("),t("left"),n("span",{class:"token operator"},"<="),t("right"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},":"),t(`
            mid `),n("span",{class:"token operator"},"="),t(),n("span",{class:"token punctuation"},"("),t("left"),n("span",{class:"token operator"},"+"),t("right"),n("span",{class:"token punctuation"},")"),n("span",{class:"token operator"},"//"),n("span",{class:"token number"},"2"),t(`
            `),n("span",{class:"token keyword"},"if"),t(" nums"),n("span",{class:"token punctuation"},"["),t("mid"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token operator"},"<"),t("target"),n("span",{class:"token punctuation"},":"),t(`
                left `),n("span",{class:"token operator"},"="),t(" mid"),n("span",{class:"token operator"},"+"),n("span",{class:"token number"},"1"),t(`
            `),n("span",{class:"token keyword"},"else"),n("span",{class:"token punctuation"},":"),t(`
                right `),n("span",{class:"token operator"},"="),t(" mid"),n("span",{class:"token operator"},"-"),n("span",{class:"token number"},"1"),t(`
        `),n("span",{class:"token keyword"},"return"),t(" left"),n("span",{class:"token operator"},"+"),n("span",{class:"token number"},"1"),t(`

`),n("span",{class:"token operator"},"//"),t(`bisect下的bisect_left也提供这个功能

`),n("span",{class:"token keyword"},"class"),t(),n("span",{class:"token class-name"},"Solution"),n("span",{class:"token punctuation"},":"),t(`
    `),n("span",{class:"token keyword"},"def"),t(),n("span",{class:"token function"},"searchInsert"),n("span",{class:"token punctuation"},"("),t("self"),n("span",{class:"token punctuation"},","),t(" nums"),n("span",{class:"token punctuation"},":"),t(" List"),n("span",{class:"token punctuation"},"["),n("span",{class:"token builtin"},"int"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},","),t(" target"),n("span",{class:"token punctuation"},":"),t(),n("span",{class:"token builtin"},"int"),n("span",{class:"token punctuation"},")"),t(),n("span",{class:"token operator"},"-"),n("span",{class:"token operator"},">"),t(),n("span",{class:"token builtin"},"int"),n("span",{class:"token punctuation"},":"),t(`
        `),n("span",{class:"token keyword"},"return"),t(" bisect"),n("span",{class:"token punctuation"},"."),t("bisect_left"),n("span",{class:"token punctuation"},"("),t("nums"),n("span",{class:"token punctuation"},","),t(" target"),n("span",{class:"token punctuation"},")"),n("span",{class:"token operator"},"+"),n("span",{class:"token number"},"1"),t(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),_={href:"https://docs.python.org/zh-cn/3/library/bisect.html?highlight=bisect#bisect.bisect_left",target:"_blank",rel:"noopener noreferrer"},v=n("thead",null,[n("tr",null,[n("th",null,"题号题目"),n("th",{style:{"text-align":"center"}},"难度"),n("th",{style:{"text-align":"center"}},"说明")])],-1),f={href:"https://leetcode.cn/problems/search-insert-position/",title:"35. 搜索插入位置",target:"_blank",rel:"noopener noreferrer"},y=n("td",{style:{"text-align":"center"}},"简单",-1),x=n("td",{style:{"text-align":"center"}},"模板题.需要注意的是下标len也有可能是答案 所以初始化的时候right=len",-1),w={href:"https://leetcode.cn/problems/first-bad-version/",title:"278. 第一个错误的版本",target:"_blank",rel:"noopener noreferrer"},L=n("td",{style:{"text-align":"center"}},"简单",-1),V=n("td",{style:{"text-align":"center"}},"需要思考 如果isBadversion是false那么该个n也有可能是答案故下一轮搜索的范围还是mid",-1),j={href:"https://leetcode.cn/problems/binary-search/",title:"704. 二分查找",target:"_blank",rel:"noopener noreferrer"},B=n("td",{style:{"text-align":"center"}},"简单",-1),C=n("td",{style:{"text-align":"center"}},"返回需要注意判断是否存在",-1),I={href:"https://leetcode.cn/problems/longest-increasing-subsequence/",title:"300. 最长递增子序列",target:"_blank",rel:"noopener noreferrer"},N=n("td",{style:{"text-align":"center"}},"中等",-1),D=n("td",{style:{"text-align":"center"}},"right=size",-1),E={href:"https://leetcode.cn/problems/find-first-and-last-position-of-element-in-sorted-array/",title:"34. 在排序数组中查找元素的第一个和最后一个位置",target:"_blank",rel:"noopener noreferrer"},S=n("td",{style:{"text-align":"center"}},"中等",-1),T=n("td",{style:{"text-align":"center"}},"不能先找到再往两边扩散",-1),q={href:"https://leetcode.cn/problems/split-array-largest-sum/",title:"410. 分割数组的最大值",target:"_blank",rel:"noopener noreferrer"},z=n("td",{style:{"text-align":"center"}},"困难",-1),A=n("td",{style:{"text-align":"center"}},"二分法猜答案",-1),R={href:"https://leetcode.cn/problems/koko-eating-bananas/",title:"875. 爱吃香蕉的珂珂",target:"_blank",rel:"noopener noreferrer"},P=n("td",{style:{"text-align":"center"}},"中等",-1),W=n("td",{style:{"text-align":"center"}},"二分法猜答案",-1),Y={href:"https://leetcode.cn/problems/capacity-to-ship-packages-within-d-days/",title:"1011. 在 D 天内送达包裹的能力",target:"_blank",rel:"noopener noreferrer"},Z=n("td",{style:{"text-align":"center"}},"中等",-1),$=n("td",{style:{"text-align":"center"}},"需要注意left为weight的max 不能小于该值",-1),F={href:"https://leetcode.cn/problems/guess-number-higher-or-lower/",title:"374. 猜数字大小",target:"_blank",rel:"noopener noreferrer"},G=n("td",{style:{"text-align":"center"}},"简单",-1),H=n("td",{style:{"text-align":"center"}},"二分法",-1),J={href:"https://leetcode.cn/problems/find-the-smallest-divisor-given-a-threshold/",title:"1283. 使结果不超过阈值的最小除数",target:"_blank",rel:"noopener noreferrer"},K=n("td",{style:{"text-align":"center"}},"中等",-1),M=n("td",{style:{"text-align":"center"}},"猜答案",-1),O={href:"https://leetcode.cn/problems/minimum-number-of-days-to-make-m-bouquets/",title:"1482. 制作 m 束花所需的最少天数",target:"_blank",rel:"noopener noreferrer"},Q=n("td",{style:{"text-align":"center"}},"中等",-1),U=n("td",{style:{"text-align":"center"}},"猜答案",-1),X={href:"https://leetcode.cn/problems/find-the-duplicate-number/",title:"287. 寻找重复数",target:"_blank",rel:"noopener noreferrer"},nn=n("td",{style:{"text-align":"center"}},"中等",-1),tn=n("td",{style:{"text-align":"center"}},"二分法+抽屉原理",-1);function en(sn,an){const o=l("CodeTabs"),s=l("ExternalLinkIcon");return u(),d("div",null,[h,e(o,{id:"37",data:[{title:"java"},{title:"python"}],"tab-id":"shell"},{tab0:a(({title:r,value:c,isActive:i})=>[b]),tab1:a(({title:r,value:c,isActive:i})=>[g]),_:1}),n("p",null,[n("a",_,[t("Python bisect文档"),e(s)])]),n("table",null,[v,n("tbody",null,[n("tr",null,[n("td",null,[n("a",f,[t("35. 搜索插入位置"),e(s)])]),y,x]),n("tr",null,[n("td",null,[n("a",w,[t("278. 第一个错误的版本"),e(s)])]),L,V]),n("tr",null,[n("td",null,[n("a",j,[t("704. 二分查找"),e(s)])]),B,C]),n("tr",null,[n("td",null,[n("a",I,[t("300. 最长递增子序列"),e(s)])]),N,D]),n("tr",null,[n("td",null,[n("a",E,[t("34. 在排序数组中查找元素的第一个和最后一个位置"),e(s)])]),S,T]),n("tr",null,[n("td",null,[n("a",q,[t("410. 分割数组的最大值"),e(s)])]),z,A]),n("tr",null,[n("td",null,[n("a",R,[t("875. 爱吃香蕉的珂珂"),e(s)])]),P,W]),n("tr",null,[n("td",null,[n("a",Y,[t("1011. 在 D 天内送达包裹的能力"),e(s)])]),Z,$]),n("tr",null,[n("td",null,[n("a",F,[t("374. 猜数字大小"),e(s)])]),G,H]),n("tr",null,[n("td",null,[n("a",J,[t("1283. 使结果不超过阈值的最小除数"),e(s)])]),K,M]),n("tr",null,[n("td",null,[n("a",O,[t("1482. 制作 m 束花所需的最少天数"),e(s)])]),Q,U]),n("tr",null,[n("td",null,[n("a",X,[t("287. 寻找重复数"),e(s)])]),nn,tn])])])])}const on=p(m,[["render",en],["__file","二分法.html.vue"]]);export{on as default};
