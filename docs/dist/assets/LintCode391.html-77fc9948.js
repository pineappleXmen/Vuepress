import{_ as n,V as s,W as a,a0 as p}from"./framework-3845b112.js";const t={},e=p(`<p>391 · 数飞机</p><p>算法</p><p>中等</p><p>通过率38%</p><p>描述</p><p>给出飞机的起飞和降落时间的列表，用序列 <code>interval</code> 表示. 请计算出天上同时最多有多少架飞机？</p><p>如果多架飞机降落和起飞在同一时刻，我们认为降落有优先权。</p><p>样例</p><p><strong>样例 1:</strong></p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>输入: [(1, 10), (2, 3), (5, 8), (4, 7)]
输出: 3
解释: 
第一架飞机在1时刻起飞, 10时刻降落.
第二架飞机在2时刻起飞, 3时刻降落.
第三架飞机在5时刻起飞, 8时刻降落.
第四架飞机在4时刻起飞, 7时刻降落.
在5时刻到6时刻之间, 天空中有三架飞机.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>样例 2:</strong></p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>输入: [(1, 2), (2, 3), (3, 4)]
输出: 1
解释: 降落优先于起飞.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Point</span><span class="token punctuation">&gt;</span></span> list  <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">for</span><span class="token punctuation">(</span>interval i<span class="token operator">:</span>airplanes<span class="token punctuation">)</span><span class="token punctuation">{</span>
list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Point</span><span class="token punctuation">(</span>i<span class="token punctuation">.</span>start<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Point</span><span class="token punctuation">(</span>i<span class="token punctuation">.</span>end<span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span>list<span class="token punctuation">,</span><span class="token punctuation">(</span>p1<span class="token punctuation">,</span>p2<span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token class-name"><span class="token namespace">p1<span class="token punctuation">.</span></span>T</span><span class="token operator">==</span><span class="token class-name"><span class="token namespace">p2<span class="token punctuation">.</span></span>T</span><span class="token operator">?</span>p1<span class="token punctuation">.</span>s<span class="token operator">-</span>p2<span class="token punctuation">.</span>s<span class="token operator">:</span><span class="token class-name"><span class="token namespace">p1<span class="token punctuation">.</span></span>T</span><span class="token operator">-</span><span class="token class-name"><span class="token namespace">p2<span class="token punctuation">.</span></span>T</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">int</span> res <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token keyword">int</span> cnt <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token keyword">for</span><span class="token punctuation">(</span><span class="token class-name">Point</span> p<span class="token operator">:</span>list<span class="token punctuation">)</span><span class="token punctuation">{</span>
	cnt<span class="token operator">+=</span><span class="token class-name"><span class="token namespace">p<span class="token punctuation">.</span></span>S</span><span class="token punctuation">;</span>
	res <span class="token operator">=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>res<span class="token punctuation">,</span>cnt<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">return</span> res<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,13),c=[e];function o(l,i){return s(),a("div",null,c)}const k=n(t,[["render",o],["__file","LintCode391.html.vue"]]);export{k as default};
